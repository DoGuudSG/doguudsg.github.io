{"version":3,"sources":["webpack://rive/webpack/bootstrap","webpack://rive/webpack/runtime/define property getters","webpack://rive/webpack/runtime/hasOwnProperty shorthand","webpack://rive/webpack/runtime/make namespace object","webpack://rive/./src/rive_canvas.js","webpack://rive/./src/rive.ts"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","_scriptDir","document","currentScript","src","Rive","readyPromiseResolve","readyPromiseReject","Module","Promise","resolve","reject","moduleOverrides","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","read_","readAsync","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","filename","binary","ret","tryParseAsDataURI","toString","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","f","data","intArrayToString","readbuffer","scriptArgs","arguments","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","err","responseType","response","onload","onerror","status","out","bind","wasmBinary","wasmMemory","setTempRet0","WebAssembly","ABORT","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","alignUp","x","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","addOnInit","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","e","RuntimeError","hasPrefix","prefix","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","wasmBinaryFile","getBinary","file","getBinaryPromise","fetch","credentials","then","catch","createWasm","info","asmLibraryArg","receiveInstance","instance","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","callbacks","func","arg","char_0","char_9","makeLegalFunctionName","name","createNamedFunction","body","Function","emval_free_list","emval_handle_array","count_emval_handles","count","get_first_emval","init_emval","__emval_register","handle","pop","refcount","extendError","baseErrorType","errorName","errorClass","message","this","stack","Error","create","constructor","PureVirtualError","embind_init_charCodes","codes","Array","embind_charCodes","readLatin1String","c","getInheritedInstanceCount","keys","registeredInstances","getLiveInheritedInstances","rv","k","push","deletionQueue","flushPendingDeletes","$$","deleteScheduled","delayFunction","setDelayFunction","fn","init_embind","BindingError","throwBindingError","getBasestPointer","class_","baseClass","upcast","registerInheritedInstance","requireHandle","registeredTypes","getTypeName","type","___getTypeName","_free","requireRegisteredType","rawType","humanName","impl","unregisterInheritedInstance","detachFinalizer","finalizationGroup","runDestructor","smartPtr","smartPtrType","rawDestructor","ptrType","registeredClass","releaseClassHandle","attachFinalizer","FinalizationGroup","iter","result","next","done","unregister","register","__embind_create_inheriting_constructor","constructorName","wrapperType","properties","arraySlice","wrapperPrototype","instancePrototype","baseClassPrototype","baseConstructor","ctor","pureVirtualFunctions","forEach","apply","p","inner","concat","preservePointerOnDelete","defineProperties","structRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","typeDependencies","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","__embind_finalize_value_object","structType","reg","rawConstructor","fieldRecords","fields","map","field","getterReturnType","setterArgumentType","fieldTypes","fieldName","getter","getterContext","setter","setterContext","write","TypeError","destructorFunction","getShiftFromSize","size","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","wt","ClassHandle_isAliasOf","other","ClassHandle","leftClass","left","rightClass","right","shallowCopyInternalPointer","throwInstanceAlreadyDeleted","ClassHandle_clone","clone","getPrototypeOf","ClassHandle_delete","ClassHandle_isDeleted","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","getActualType","downcast","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","isConst","sharingPolicy","clonedHandle","rawShare","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstance","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","destructor","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","replacePublicSymbol","dynCallLegacy","sig","args","dynCall","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","fp","UnboundTypeError","throwUnboundTypeError","types","unboundTypes","seen","visit","join","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","new_","argumentList","dummy","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","heap32VectorToArray","firstElement","array","__embind_register_class_class_function","rawClassType","rawArgTypesAddr","invokerSignature","rawInvoker","rawArgTypes","unboundTypesHandler","invokerArgsArray","validateThis","this_","__embind_register_class_class_property","rawFieldType","rawFieldPtr","getterSignature","setterSignature","desc","configurable","set","v","fieldType","__embind_register_class_constructor","invoker","__embind_register_class_function","context","isPureVirtual","method","className","memberFunction","__embind_register_class_property","__emval_decref","__embind_register_emval","enumReadValueFromPointer","signed","__embind_register_enum","isSigned","values","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","t","floatReadValueFromPointer","__embind_register_float","__embind_register_function","integerReadValueFromPointer","__embind_register_integer","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","a","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","_malloc","charCode","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","__embind_register_value_object","constructorSignature","__embind_register_value_object_field","__embind_register_void","isVoid","__emval_as","returnType","destructorsRef","rd","__emval_allocateDestructors","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","__emval_call_method","caller","__emval_call_void_method","__emval_addMethodCaller","__emval_lookupTypes","__emval_get_method_caller","retType","signatureName","params","functionBody","offset","__emval_get_module_property","__emval_get_property","__emval_incref","__emval_new_cstring","__emval_run_destructors","__emval_take_value","argv","_abort","emscripten_realloc_buffer","grow","byteLength","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","Math","min","max","SYSCALLS","mappings","buffers","printChar","stream","curr","varargs","getStr","get64","low","high","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","num","j","_setTempRet0","$i","ASSERTIONS","chr","decodeBase64","atob","input","chr1","chr2","chr3","enc2","enc3","enc4","keyStr","charAt","intArrayFromBase64","s","Buffer","from","_","decoded","bytes","calledRun","run","doRun","setTimeout","runCaller","makeMatrix","m2d","m","DOMMatrix","xx","b","xy","yx","yy","tx","ty","onRuntimeInitialized","RenderPaintStyle","FillRule","RenderPath","RenderPaint","Renderer","StrokeCap","StrokeJoin","BlendMode","fill","stroke","evenOdd","nonZero","CanvasRenderPath","extend","__construct","__parent","_path2D","Path2D","reset","addPath","fillRule","_fillRule","moveTo","y","lineTo","cubicTo","ox","oy","ix","iy","bezierCurveTo","close","closePath","_colorStyle","CanvasRenderPaint","color","_value","thickness","_thickness","miter","_join","round","bevel","cap","butt","_cap","square","style","_style","blendMode","srcOver","_blend","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","multiply","hue","saturation","luminosity","linearGradient","sx","sy","ey","_gradient","stops","radialGradient","isRadial","addStop","stop","completeGradient","draw","ctx","globalCompositeOperation","dx","dy","radius","sqrt","createRadialGradient","createLinearGradient","addColorStop","strokeStyle","lineWidth","lineCap","lineJoin","fillStyle","CanvasRenderer","_ctx","save","restore","transform","matrix","drawPath","paint","clipPath","clip","renderFactory","makeRenderPaint","makeRenderPath","ready","PlaybackState","Fit","Alignment","StateMachineInputType","fit","Contain","alignment","Center","minX","minY","maxX","maxY","new","Layout","copyWith","runtimeFit","rive","cachedRuntimeFit","Cover","cover","contain","Fill","FitWidth","fitWidth","FitHeight","fitHeight","ScaleDown","scaleDown","none","runtimeAlignment","cachedRuntimeAlignment","TopLeft","topLeft","TopCenter","topCenter","TopRight","topRight","CenterLeft","centerLeft","CenterRight","centerRight","BottomLeft","bottomLeft","BottomCenter","bottomCenter","BottomRight","bottomRight","center","loadRuntime","RuntimeLoader","wasmURL","runtime","callBackQueue","getInstance","isLoading","awaitInstance","setWasmUrl","animation","playing","loopCount","scrubTo","LinearAnimationInstance","time","loopValue","advance","cleanup","delete","EventType","LoopType","runtimeInput","fire","Trigger","stateMachine","inputs","StateMachineInstance","initInputs","names","stateChangedCount","stateChangedNameByIndex","inputCount","mapRuntimeInput","SMIInput","bool","StateMachineInput","Boolean","asBool","number","Number","asNumber","trigger","asTrigger","artboard","eventManager","animations","stateMachines","add","animatables","fireEvent","mapToStringArray","instancedAnimationNames","instancedMachineNames","aIndex","mIndex","anim","animationByName","Animation","sm","stateMachineByName","StateMachine","Play","Pause","paused","play","pause","scrub","forScrubbing","filter","includes","removedNames","splice","animationsToRemove","machinesToRemove","Stop","reduce","acc","isPlaying","atLeastOne","instancedName","animationCount","animationByIndex","stateMachineCount","stateMachineByIndex","handleLooping","Loop","PingPong","handleStateChanges","statesChanged","StateChange","listeners","getListeners","listener","remove","currentListener","removeAll","l","event","queue","task","action","_updateLayout","isRendererActive","loaded","readyForPlaying","renderSecondTimer","canvas","layout","getContext","EventManager","on","Load","onloaderror","LoadError","onplay","onpause","onstop","onloop","onstatechange","taskQueue","TaskQueueManager","init","autoplay","missingErrorMessage","startingAnimationNames","startingStateMachineNames","initData","artboardName","animationNames","stateMachineNames","loadRiveFile","load","initArtboard","drawFrame","msg","instanceNames","rootArtboard","artboardByName","defaultArtboard","animator","Animator","renderer","startRendering","onSecond","frameRequestId","lastRenderTime","elapsedTime","needsScrub","sort","first","second","didLoop","alignRenderer","bounds","clearRect","isPaused","isStopped","width","height","align","_layout","artBoardName","resizeToCanvas","stateMachineInputs","find","unsubscribe","unsubscribeAll","stopRendering","cancelAnimationFrame","requestAnimationFrame","riveContents","artboards","artboardCount","artboardByIndex","artboardContents","inputContents","req","Request","arrayBuffer","Testing"],"mappings":"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","file":"rive.min.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nvar Rive = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(Rive) {\n  Rive = Rive || {};\n\nnull;\n\nvar Module = typeof Rive !== \"undefined\" ? Rive : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise(function(resolve, reject) {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\nvar moduleOverrides = {};\n\nvar key;\n\nfor (key in Module) {\n if (Module.hasOwnProperty(key)) {\n  moduleOverrides[key] = Module[key];\n }\n}\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = function(status, toThrow) {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = false;\n\nvar ENVIRONMENT_IS_WORKER = false;\n\nvar ENVIRONMENT_IS_NODE = false;\n\nvar ENVIRONMENT_IS_SHELL = false;\n\nENVIRONMENT_IS_WEB = typeof window === \"object\";\n\nENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n\nENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nvar nodeFS;\n\nvar nodePath;\n\nif (ENVIRONMENT_IS_NODE) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = require(\"path\").dirname(scriptDirectory) + \"/\";\n } else {\n  scriptDirectory = __dirname + \"/\";\n }\n read_ = function shell_read(filename, binary) {\n  var ret = tryParseAsDataURI(filename);\n  if (ret) {\n   return binary ? ret : ret.toString();\n  }\n  if (!nodeFS) nodeFS = require(\"fs\");\n  if (!nodePath) nodePath = require(\"path\");\n  filename = nodePath[\"normalize\"](filename);\n  return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n };\n readBinary = function readBinary(filename) {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n   ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n };\n if (process[\"argv\"].length > 1) {\n  thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n }\n arguments_ = process[\"argv\"].slice(2);\n process[\"on\"](\"uncaughtException\", function(ex) {\n  if (!(ex instanceof ExitStatus)) {\n   throw ex;\n  }\n });\n process[\"on\"](\"unhandledRejection\", abort);\n quit_ = function(status) {\n  process[\"exit\"](status);\n };\n Module[\"inspect\"] = function() {\n  return \"[Emscripten Module object]\";\n };\n} else if (ENVIRONMENT_IS_SHELL) {\n if (typeof read != \"undefined\") {\n  read_ = function shell_read(f) {\n   var data = tryParseAsDataURI(f);\n   if (data) {\n    return intArrayToString(data);\n   }\n   return read(f);\n  };\n }\n readBinary = function readBinary(f) {\n  var data;\n  data = tryParseAsDataURI(f);\n  if (data) {\n   return data;\n  }\n  if (typeof readbuffer === \"function\") {\n   return new Uint8Array(readbuffer(f));\n  }\n  data = read(f, \"binary\");\n  assert(typeof data === \"object\");\n  return data;\n };\n if (typeof scriptArgs != \"undefined\") {\n  arguments_ = scriptArgs;\n } else if (typeof arguments != \"undefined\") {\n  arguments_ = arguments;\n }\n if (typeof quit === \"function\") {\n  quit_ = function(status) {\n   quit(status);\n  };\n }\n if (typeof print !== \"undefined\") {\n  if (typeof console === \"undefined\") console = {};\n  console.log = print;\n  console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n }\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document !== \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n {\n  read_ = function(url) {\n   try {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.send(null);\n    return xhr.responseText;\n   } catch (err) {\n    var data = tryParseAsDataURI(url);\n    if (data) {\n     return intArrayToString(data);\n    }\n    throw err;\n   }\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = function(url) {\n    try {\n     var xhr = new XMLHttpRequest();\n     xhr.open(\"GET\", url, false);\n     xhr.responseType = \"arraybuffer\";\n     xhr.send(null);\n     return new Uint8Array(xhr.response);\n    } catch (err) {\n     var data = tryParseAsDataURI(url);\n     if (data) {\n      return data;\n     }\n     throw err;\n    }\n   };\n  }\n  readAsync = function(url, onload, onerror) {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = function() {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    var data = tryParseAsDataURI(url);\n    if (data) {\n     onload(data.buffer);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = function(title) {\n  document.title = title;\n };\n} else {}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.warn.bind(console);\n\nfor (key in moduleOverrides) {\n if (moduleOverrides.hasOwnProperty(key)) {\n  Module[key] = moduleOverrides[key];\n }\n}\n\nmoduleOverrides = null;\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nvar tempRet0 = 0;\n\nvar setTempRet0 = function(value) {\n tempRet0 = value;\n};\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\nif (typeof WebAssembly !== \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(\"Assertion failed: \" + text);\n }\n}\n\nvar UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heap, idx, maxBytesToRead) {\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n  return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n } else {\n  var str = \"\";\n  while (idx < endPtr) {\n   var u0 = heap[idx++];\n   if (!(u0 & 128)) {\n    str += String.fromCharCode(u0);\n    continue;\n   }\n   var u1 = heap[idx++] & 63;\n   if ((u0 & 224) == 192) {\n    str += String.fromCharCode((u0 & 31) << 6 | u1);\n    continue;\n   }\n   var u2 = heap[idx++] & 63;\n   if ((u0 & 240) == 224) {\n    u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n   } else {\n    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n   }\n   if (u0 < 65536) {\n    str += String.fromCharCode(u0);\n   } else {\n    var ch = u0 - 65536;\n    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n   }\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++] = 192 | u >> 6;\n   heap[outIdx++] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++] = 224 | u >> 12;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   heap[outIdx++] = 240 | u >> 18;\n   heap[outIdx++] = 128 | u >> 12 & 63;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  }\n }\n heap[outIdx] = 0;\n return outIdx - startIdx;\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n\nfunction lengthBytesUTF8(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n  if (u <= 127) ++len; else if (u <= 2047) len += 2; else if (u <= 65535) len += 3; else len += 4;\n }\n return len;\n}\n\nvar UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n var endPtr = ptr;\n var idx = endPtr >> 1;\n var maxIdx = idx + maxBytesToRead / 2;\n while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n endPtr = idx << 1;\n if (endPtr - ptr > 32 && UTF16Decoder) {\n  return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n } else {\n  var str = \"\";\n  for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n   var codeUnit = HEAP16[ptr + i * 2 >> 1];\n   if (codeUnit == 0) break;\n   str += String.fromCharCode(codeUnit);\n  }\n  return str;\n }\n}\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 2) return 0;\n maxBytesToWrite -= 2;\n var startPtr = outPtr;\n var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n for (var i = 0; i < numCharsToWrite; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  HEAP16[outPtr >> 1] = codeUnit;\n  outPtr += 2;\n }\n HEAP16[outPtr >> 1] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF16(str) {\n return str.length * 2;\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n var i = 0;\n var str = \"\";\n while (!(i >= maxBytesToRead / 4)) {\n  var utf32 = HEAP32[ptr + i * 4 >> 2];\n  if (utf32 == 0) break;\n  ++i;\n  if (utf32 >= 65536) {\n   var ch = utf32 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  } else {\n   str += String.fromCharCode(utf32);\n  }\n }\n return str;\n}\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 4) return 0;\n var startPtr = outPtr;\n var endPtr = startPtr + maxBytesToWrite - 4;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\n   var trailSurrogate = str.charCodeAt(++i);\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n  }\n  HEAP32[outPtr >> 2] = codeUnit;\n  outPtr += 4;\n  if (outPtr + 4 > endPtr) break;\n }\n HEAP32[outPtr >> 2] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF32(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n  len += 4;\n }\n return len;\n}\n\nfunction alignUp(x, multiple) {\n if (x % multiple > 0) {\n  x += multiple - x % multiple;\n }\n return x;\n}\n\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n buffer = buf;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n}\n\nvar INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n\nvar wasmTable;\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATMAIN__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n runtimeInitialized = true;\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction postRun() {\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nModule[\"preloadedImages\"] = {};\n\nModule[\"preloadedAudios\"] = {};\n\nfunction abort(what) {\n if (Module[\"onAbort\"]) {\n  Module[\"onAbort\"](what);\n }\n what += \"\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nfunction hasPrefix(str, prefix) {\n return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return hasPrefix(filename, dataURIPrefix);\n}\n\nvar fileURIPrefix = \"file://\";\n\nfunction isFileURI(filename) {\n return hasPrefix(filename, fileURIPrefix);\n}\n\nvar wasmBinaryFile = \"data:application/octet-stream;base64,\";\n\nif (!isDataURI(wasmBinaryFile)) {\n wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary(file) {\n try {\n  if (file == wasmBinaryFile && wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  var binary = tryParseAsDataURI(file);\n  if (binary) {\n   return binary;\n  }\n  if (readBinary) {\n   return readBinary(file);\n  } else {\n   throw \"both async and sync fetching of the wasm failed\";\n  }\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise() {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    if (!response[\"ok\"]) {\n     throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(function() {\n    return getBinary(wasmBinaryFile);\n   });\n  } else {\n   if (readAsync) {\n    return new Promise(function(resolve, reject) {\n     readAsync(wasmBinaryFile, function(response) {\n      resolve(new Uint8Array(response));\n     }, reject);\n    });\n   }\n  }\n }\n return Promise.resolve().then(function() {\n  return getBinary(wasmBinaryFile);\n });\n}\n\nfunction createWasm() {\n var info = {\n  \"a\": asmLibraryArg\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  Module[\"asm\"] = exports;\n  wasmMemory = Module[\"asm\"][\"M\"];\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  wasmTable = Module[\"asm\"][\"O\"];\n  addOnInit(Module[\"asm\"][\"N\"]);\n  removeRunDependency(\"wasm-instantiate\");\n }\n addRunDependency(\"wasm-instantiate\");\n function receiveInstantiatedSource(output) {\n  receiveInstance(output[\"instance\"]);\n }\n function instantiateArrayBuffer(receiver) {\n  return getBinaryPromise().then(function(binary) {\n   var result = WebAssembly.instantiate(binary, info);\n   return result;\n  }).then(receiver, function(reason) {\n   err(\"failed to asynchronously prepare wasm: \" + reason);\n   abort(reason);\n  });\n }\n function instantiateAsync() {\n  if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    var result = WebAssembly.instantiateStreaming(response, info);\n    return result.then(receiveInstantiatedSource, function(reason) {\n     err(\"wasm streaming compile failed: \" + reason);\n     err(\"falling back to ArrayBuffer instantiation\");\n     return instantiateArrayBuffer(receiveInstantiatedSource);\n    });\n   });\n  } else {\n   return instantiateArrayBuffer(receiveInstantiatedSource);\n  }\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n   return exports;\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   return false;\n  }\n }\n instantiateAsync().catch(readyPromiseReject);\n return {};\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  var callback = callbacks.shift();\n  if (typeof callback == \"function\") {\n   callback(Module);\n   continue;\n  }\n  var func = callback.func;\n  if (typeof func === \"number\") {\n   if (callback.arg === undefined) {\n    wasmTable.get(func)();\n   } else {\n    wasmTable.get(func)(callback.arg);\n   }\n  } else {\n   func(callback.arg === undefined ? null : callback.arg);\n  }\n }\n}\n\nvar char_0 = 48;\n\nvar char_9 = 57;\n\nfunction makeLegalFunctionName(name) {\n if (undefined === name) {\n  return \"_unknown\";\n }\n name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n var f = name.charCodeAt(0);\n if (f >= char_0 && f <= char_9) {\n  return \"_\" + name;\n } else {\n  return name;\n }\n}\n\nfunction createNamedFunction(name, body) {\n name = makeLegalFunctionName(name);\n return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\n}\n\nvar emval_free_list = [];\n\nvar emval_handle_array = [ {}, {\n value: undefined\n}, {\n value: null\n}, {\n value: true\n}, {\n value: false\n} ];\n\nfunction count_emval_handles() {\n var count = 0;\n for (var i = 5; i < emval_handle_array.length; ++i) {\n  if (emval_handle_array[i] !== undefined) {\n   ++count;\n  }\n }\n return count;\n}\n\nfunction get_first_emval() {\n for (var i = 5; i < emval_handle_array.length; ++i) {\n  if (emval_handle_array[i] !== undefined) {\n   return emval_handle_array[i];\n  }\n }\n return null;\n}\n\nfunction init_emval() {\n Module[\"count_emval_handles\"] = count_emval_handles;\n Module[\"get_first_emval\"] = get_first_emval;\n}\n\nfunction __emval_register(value) {\n switch (value) {\n case undefined:\n  {\n   return 1;\n  }\n\n case null:\n  {\n   return 2;\n  }\n\n case true:\n  {\n   return 3;\n  }\n\n case false:\n  {\n   return 4;\n  }\n\n default:\n  {\n   var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n   emval_handle_array[handle] = {\n    refcount: 1,\n    value: value\n   };\n   return handle;\n  }\n }\n}\n\nfunction extendError(baseErrorType, errorName) {\n var errorClass = createNamedFunction(errorName, function(message) {\n  this.name = errorName;\n  this.message = message;\n  var stack = new Error(message).stack;\n  if (stack !== undefined) {\n   this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n  }\n });\n errorClass.prototype = Object.create(baseErrorType.prototype);\n errorClass.prototype.constructor = errorClass;\n errorClass.prototype.toString = function() {\n  if (this.message === undefined) {\n   return this.name;\n  } else {\n   return this.name + \": \" + this.message;\n  }\n };\n return errorClass;\n}\n\nvar PureVirtualError = undefined;\n\nfunction embind_init_charCodes() {\n var codes = new Array(256);\n for (var i = 0; i < 256; ++i) {\n  codes[i] = String.fromCharCode(i);\n }\n embind_charCodes = codes;\n}\n\nvar embind_charCodes = undefined;\n\nfunction readLatin1String(ptr) {\n var ret = \"\";\n var c = ptr;\n while (HEAPU8[c]) {\n  ret += embind_charCodes[HEAPU8[c++]];\n }\n return ret;\n}\n\nfunction getInheritedInstanceCount() {\n return Object.keys(registeredInstances).length;\n}\n\nfunction getLiveInheritedInstances() {\n var rv = [];\n for (var k in registeredInstances) {\n  if (registeredInstances.hasOwnProperty(k)) {\n   rv.push(registeredInstances[k]);\n  }\n }\n return rv;\n}\n\nvar deletionQueue = [];\n\nfunction flushPendingDeletes() {\n while (deletionQueue.length) {\n  var obj = deletionQueue.pop();\n  obj.$$.deleteScheduled = false;\n  obj[\"delete\"]();\n }\n}\n\nvar delayFunction = undefined;\n\nfunction setDelayFunction(fn) {\n delayFunction = fn;\n if (deletionQueue.length && delayFunction) {\n  delayFunction(flushPendingDeletes);\n }\n}\n\nfunction init_embind() {\n Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n Module[\"setDelayFunction\"] = setDelayFunction;\n}\n\nvar registeredInstances = {};\n\nvar BindingError = undefined;\n\nfunction throwBindingError(message) {\n throw new BindingError(message);\n}\n\nfunction getBasestPointer(class_, ptr) {\n if (ptr === undefined) {\n  throwBindingError(\"ptr should not be undefined\");\n }\n while (class_.baseClass) {\n  ptr = class_.upcast(ptr);\n  class_ = class_.baseClass;\n }\n return ptr;\n}\n\nfunction registerInheritedInstance(class_, ptr, instance) {\n ptr = getBasestPointer(class_, ptr);\n if (registeredInstances.hasOwnProperty(ptr)) {\n  throwBindingError(\"Tried to register registered instance: \" + ptr);\n } else {\n  registeredInstances[ptr] = instance;\n }\n}\n\nfunction requireHandle(handle) {\n if (!handle) {\n  throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n }\n return emval_handle_array[handle].value;\n}\n\nvar registeredTypes = {};\n\nfunction getTypeName(type) {\n var ptr = ___getTypeName(type);\n var rv = readLatin1String(ptr);\n _free(ptr);\n return rv;\n}\n\nfunction requireRegisteredType(rawType, humanName) {\n var impl = registeredTypes[rawType];\n if (undefined === impl) {\n  throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n }\n return impl;\n}\n\nfunction unregisterInheritedInstance(class_, ptr) {\n ptr = getBasestPointer(class_, ptr);\n if (registeredInstances.hasOwnProperty(ptr)) {\n  delete registeredInstances[ptr];\n } else {\n  throwBindingError(\"Tried to unregister unregistered instance: \" + ptr);\n }\n}\n\nfunction detachFinalizer(handle) {}\n\nvar finalizationGroup = false;\n\nfunction runDestructor($$) {\n if ($$.smartPtr) {\n  $$.smartPtrType.rawDestructor($$.smartPtr);\n } else {\n  $$.ptrType.registeredClass.rawDestructor($$.ptr);\n }\n}\n\nfunction releaseClassHandle($$) {\n $$.count.value -= 1;\n var toDelete = 0 === $$.count.value;\n if (toDelete) {\n  runDestructor($$);\n }\n}\n\nfunction attachFinalizer(handle) {\n if (\"undefined\" === typeof FinalizationGroup) {\n  attachFinalizer = function(handle) {\n   return handle;\n  };\n  return handle;\n }\n finalizationGroup = new FinalizationGroup(function(iter) {\n  for (var result = iter.next(); !result.done; result = iter.next()) {\n   var $$ = result.value;\n   if (!$$.ptr) {\n    console.warn(\"object already deleted: \" + $$.ptr);\n   } else {\n    releaseClassHandle($$);\n   }\n  }\n });\n attachFinalizer = function(handle) {\n  finalizationGroup.register(handle, handle.$$, handle.$$);\n  return handle;\n };\n detachFinalizer = function(handle) {\n  finalizationGroup.unregister(handle.$$);\n };\n return attachFinalizer(handle);\n}\n\nfunction __embind_create_inheriting_constructor(constructorName, wrapperType, properties) {\n constructorName = readLatin1String(constructorName);\n wrapperType = requireRegisteredType(wrapperType, \"wrapper\");\n properties = requireHandle(properties);\n var arraySlice = [].slice;\n var registeredClass = wrapperType.registeredClass;\n var wrapperPrototype = registeredClass.instancePrototype;\n var baseClass = registeredClass.baseClass;\n var baseClassPrototype = baseClass.instancePrototype;\n var baseConstructor = registeredClass.baseClass.constructor;\n var ctor = createNamedFunction(constructorName, function() {\n  registeredClass.baseClass.pureVirtualFunctions.forEach(function(name) {\n   if (this[name] === baseClassPrototype[name]) {\n    throw new PureVirtualError(\"Pure virtual function \" + name + \" must be implemented in JavaScript\");\n   }\n  }.bind(this));\n  Object.defineProperty(this, \"__parent\", {\n   value: wrapperPrototype\n  });\n  this[\"__construct\"].apply(this, arraySlice.call(arguments));\n });\n wrapperPrototype[\"__construct\"] = function __construct() {\n  if (this === wrapperPrototype) {\n   throwBindingError(\"Pass correct 'this' to __construct\");\n  }\n  var inner = baseConstructor[\"implement\"].apply(undefined, [ this ].concat(arraySlice.call(arguments)));\n  detachFinalizer(inner);\n  var $$ = inner.$$;\n  inner[\"notifyOnDestruction\"]();\n  $$.preservePointerOnDelete = true;\n  Object.defineProperties(this, {\n   $$: {\n    value: $$\n   }\n  });\n  attachFinalizer(this);\n  registerInheritedInstance(registeredClass, $$.ptr, this);\n };\n wrapperPrototype[\"__destruct\"] = function __destruct() {\n  if (this === wrapperPrototype) {\n   throwBindingError(\"Pass correct 'this' to __destruct\");\n  }\n  detachFinalizer(this);\n  unregisterInheritedInstance(registeredClass, this.$$.ptr);\n };\n ctor.prototype = Object.create(wrapperPrototype);\n for (var p in properties) {\n  ctor.prototype[p] = properties[p];\n }\n return __emval_register(ctor);\n}\n\nvar structRegistrations = {};\n\nfunction runDestructors(destructors) {\n while (destructors.length) {\n  var ptr = destructors.pop();\n  var del = destructors.pop();\n  del(ptr);\n }\n}\n\nfunction simpleReadValueFromPointer(pointer) {\n return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n}\n\nvar awaitingDependencies = {};\n\nvar typeDependencies = {};\n\nvar InternalError = undefined;\n\nfunction throwInternalError(message) {\n throw new InternalError(message);\n}\n\nfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n myTypes.forEach(function(type) {\n  typeDependencies[type] = dependentTypes;\n });\n function onComplete(typeConverters) {\n  var myTypeConverters = getTypeConverters(typeConverters);\n  if (myTypeConverters.length !== myTypes.length) {\n   throwInternalError(\"Mismatched type converter count\");\n  }\n  for (var i = 0; i < myTypes.length; ++i) {\n   registerType(myTypes[i], myTypeConverters[i]);\n  }\n }\n var typeConverters = new Array(dependentTypes.length);\n var unregisteredTypes = [];\n var registered = 0;\n dependentTypes.forEach(function(dt, i) {\n  if (registeredTypes.hasOwnProperty(dt)) {\n   typeConverters[i] = registeredTypes[dt];\n  } else {\n   unregisteredTypes.push(dt);\n   if (!awaitingDependencies.hasOwnProperty(dt)) {\n    awaitingDependencies[dt] = [];\n   }\n   awaitingDependencies[dt].push(function() {\n    typeConverters[i] = registeredTypes[dt];\n    ++registered;\n    if (registered === unregisteredTypes.length) {\n     onComplete(typeConverters);\n    }\n   });\n  }\n });\n if (0 === unregisteredTypes.length) {\n  onComplete(typeConverters);\n }\n}\n\nfunction __embind_finalize_value_object(structType) {\n var reg = structRegistrations[structType];\n delete structRegistrations[structType];\n var rawConstructor = reg.rawConstructor;\n var rawDestructor = reg.rawDestructor;\n var fieldRecords = reg.fields;\n var fieldTypes = fieldRecords.map(function(field) {\n  return field.getterReturnType;\n }).concat(fieldRecords.map(function(field) {\n  return field.setterArgumentType;\n }));\n whenDependentTypesAreResolved([ structType ], fieldTypes, function(fieldTypes) {\n  var fields = {};\n  fieldRecords.forEach(function(field, i) {\n   var fieldName = field.fieldName;\n   var getterReturnType = fieldTypes[i];\n   var getter = field.getter;\n   var getterContext = field.getterContext;\n   var setterArgumentType = fieldTypes[i + fieldRecords.length];\n   var setter = field.setter;\n   var setterContext = field.setterContext;\n   fields[fieldName] = {\n    read: function(ptr) {\n     return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n    },\n    write: function(ptr, o) {\n     var destructors = [];\n     setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n     runDestructors(destructors);\n    }\n   };\n  });\n  return [ {\n   name: reg.name,\n   \"fromWireType\": function(ptr) {\n    var rv = {};\n    for (var i in fields) {\n     rv[i] = fields[i].read(ptr);\n    }\n    rawDestructor(ptr);\n    return rv;\n   },\n   \"toWireType\": function(destructors, o) {\n    for (var fieldName in fields) {\n     if (!(fieldName in o)) {\n      throw new TypeError('Missing field:  \"' + fieldName + '\"');\n     }\n    }\n    var ptr = rawConstructor();\n    for (fieldName in fields) {\n     fields[fieldName].write(ptr, o[fieldName]);\n    }\n    if (destructors !== null) {\n     destructors.push(rawDestructor, ptr);\n    }\n    return ptr;\n   },\n   \"argPackAdvance\": 8,\n   \"readValueFromPointer\": simpleReadValueFromPointer,\n   destructorFunction: rawDestructor\n  } ];\n });\n}\n\nfunction getShiftFromSize(size) {\n switch (size) {\n case 1:\n  return 0;\n\n case 2:\n  return 1;\n\n case 4:\n  return 2;\n\n case 8:\n  return 3;\n\n default:\n  throw new TypeError(\"Unknown type size: \" + size);\n }\n}\n\nfunction registerType(rawType, registeredInstance, options) {\n options = options || {};\n if (!(\"argPackAdvance\" in registeredInstance)) {\n  throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n }\n var name = registeredInstance.name;\n if (!rawType) {\n  throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n }\n if (registeredTypes.hasOwnProperty(rawType)) {\n  if (options.ignoreDuplicateRegistrations) {\n   return;\n  } else {\n   throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n  }\n }\n registeredTypes[rawType] = registeredInstance;\n delete typeDependencies[rawType];\n if (awaitingDependencies.hasOwnProperty(rawType)) {\n  var callbacks = awaitingDependencies[rawType];\n  delete awaitingDependencies[rawType];\n  callbacks.forEach(function(cb) {\n   cb();\n  });\n }\n}\n\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(wt) {\n   return !!wt;\n  },\n  \"toWireType\": function(destructors, o) {\n   return o ? trueValue : falseValue;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": function(pointer) {\n   var heap;\n   if (size === 1) {\n    heap = HEAP8;\n   } else if (size === 2) {\n    heap = HEAP16;\n   } else if (size === 4) {\n    heap = HEAP32;\n   } else {\n    throw new TypeError(\"Unknown boolean type size: \" + name);\n   }\n   return this[\"fromWireType\"](heap[pointer >> shift]);\n  },\n  destructorFunction: null\n });\n}\n\nfunction ClassHandle_isAliasOf(other) {\n if (!(this instanceof ClassHandle)) {\n  return false;\n }\n if (!(other instanceof ClassHandle)) {\n  return false;\n }\n var leftClass = this.$$.ptrType.registeredClass;\n var left = this.$$.ptr;\n var rightClass = other.$$.ptrType.registeredClass;\n var right = other.$$.ptr;\n while (leftClass.baseClass) {\n  left = leftClass.upcast(left);\n  leftClass = leftClass.baseClass;\n }\n while (rightClass.baseClass) {\n  right = rightClass.upcast(right);\n  rightClass = rightClass.baseClass;\n }\n return leftClass === rightClass && left === right;\n}\n\nfunction shallowCopyInternalPointer(o) {\n return {\n  count: o.count,\n  deleteScheduled: o.deleteScheduled,\n  preservePointerOnDelete: o.preservePointerOnDelete,\n  ptr: o.ptr,\n  ptrType: o.ptrType,\n  smartPtr: o.smartPtr,\n  smartPtrType: o.smartPtrType\n };\n}\n\nfunction throwInstanceAlreadyDeleted(obj) {\n function getInstanceTypeName(handle) {\n  return handle.$$.ptrType.registeredClass.name;\n }\n throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n}\n\nfunction ClassHandle_clone() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.preservePointerOnDelete) {\n  this.$$.count.value += 1;\n  return this;\n } else {\n  var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n   $$: {\n    value: shallowCopyInternalPointer(this.$$)\n   }\n  }));\n  clone.$$.count.value += 1;\n  clone.$$.deleteScheduled = false;\n  return clone;\n }\n}\n\nfunction ClassHandle_delete() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n  throwBindingError(\"Object already scheduled for deletion\");\n }\n detachFinalizer(this);\n releaseClassHandle(this.$$);\n if (!this.$$.preservePointerOnDelete) {\n  this.$$.smartPtr = undefined;\n  this.$$.ptr = undefined;\n }\n}\n\nfunction ClassHandle_isDeleted() {\n return !this.$$.ptr;\n}\n\nfunction ClassHandle_deleteLater() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n  throwBindingError(\"Object already scheduled for deletion\");\n }\n deletionQueue.push(this);\n if (deletionQueue.length === 1 && delayFunction) {\n  delayFunction(flushPendingDeletes);\n }\n this.$$.deleteScheduled = true;\n return this;\n}\n\nfunction init_ClassHandle() {\n ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n}\n\nfunction ClassHandle() {}\n\nvar registeredPointers = {};\n\nfunction ensureOverloadTable(proto, methodName, humanName) {\n if (undefined === proto[methodName].overloadTable) {\n  var prevFunc = proto[methodName];\n  proto[methodName] = function() {\n   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n    throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n   }\n   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n  };\n  proto[methodName].overloadTable = [];\n  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n }\n}\n\nfunction exposePublicSymbol(name, value, numArguments) {\n if (Module.hasOwnProperty(name)) {\n  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n   throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n  }\n  ensureOverloadTable(Module, name, name);\n  if (Module.hasOwnProperty(numArguments)) {\n   throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n  }\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  if (undefined !== numArguments) {\n   Module[name].numArguments = numArguments;\n  }\n }\n}\n\nfunction RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n this.name = name;\n this.constructor = constructor;\n this.instancePrototype = instancePrototype;\n this.rawDestructor = rawDestructor;\n this.baseClass = baseClass;\n this.getActualType = getActualType;\n this.upcast = upcast;\n this.downcast = downcast;\n this.pureVirtualFunctions = [];\n}\n\nfunction upcastPointer(ptr, ptrClass, desiredClass) {\n while (ptrClass !== desiredClass) {\n  if (!ptrClass.upcast) {\n   throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n  }\n  ptr = ptrClass.upcast(ptr);\n  ptrClass = ptrClass.baseClass;\n }\n return ptr;\n}\n\nfunction constNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\nfunction genericPointerToWireType(destructors, handle) {\n var ptr;\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  if (this.isSmartPointer) {\n   ptr = this.rawConstructor();\n   if (destructors !== null) {\n    destructors.push(this.rawDestructor, ptr);\n   }\n   return ptr;\n  } else {\n   return 0;\n  }\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n if (!this.isConst && handle.$$.ptrType.isConst) {\n  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n if (this.isSmartPointer) {\n  if (undefined === handle.$$.smartPtr) {\n   throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n  }\n  switch (this.sharingPolicy) {\n  case 0:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n   }\n   break;\n\n  case 1:\n   ptr = handle.$$.smartPtr;\n   break;\n\n  case 2:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    var clonedHandle = handle[\"clone\"]();\n    ptr = this.rawShare(ptr, __emval_register(function() {\n     clonedHandle[\"delete\"]();\n    }));\n    if (destructors !== null) {\n     destructors.push(this.rawDestructor, ptr);\n    }\n   }\n   break;\n\n  default:\n   throwBindingError(\"Unsupporting sharing policy\");\n  }\n }\n return ptr;\n}\n\nfunction nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n if (handle.$$.ptrType.isConst) {\n  throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\nfunction RegisteredPointer_getPointee(ptr) {\n if (this.rawGetPointee) {\n  ptr = this.rawGetPointee(ptr);\n }\n return ptr;\n}\n\nfunction RegisteredPointer_destructor(ptr) {\n if (this.rawDestructor) {\n  this.rawDestructor(ptr);\n }\n}\n\nfunction RegisteredPointer_deleteObject(handle) {\n if (handle !== null) {\n  handle[\"delete\"]();\n }\n}\n\nfunction downcastPointer(ptr, ptrClass, desiredClass) {\n if (ptrClass === desiredClass) {\n  return ptr;\n }\n if (undefined === desiredClass.baseClass) {\n  return null;\n }\n var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n if (rv === null) {\n  return null;\n }\n return desiredClass.downcast(rv);\n}\n\nfunction getInheritedInstance(class_, ptr) {\n ptr = getBasestPointer(class_, ptr);\n return registeredInstances[ptr];\n}\n\nfunction makeClassHandle(prototype, record) {\n if (!record.ptrType || !record.ptr) {\n  throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n }\n var hasSmartPtrType = !!record.smartPtrType;\n var hasSmartPtr = !!record.smartPtr;\n if (hasSmartPtrType !== hasSmartPtr) {\n  throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n }\n record.count = {\n  value: 1\n };\n return attachFinalizer(Object.create(prototype, {\n  $$: {\n   value: record\n  }\n }));\n}\n\nfunction RegisteredPointer_fromWireType(ptr) {\n var rawPointer = this.getPointee(ptr);\n if (!rawPointer) {\n  this.destructor(ptr);\n  return null;\n }\n var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n if (undefined !== registeredInstance) {\n  if (0 === registeredInstance.$$.count.value) {\n   registeredInstance.$$.ptr = rawPointer;\n   registeredInstance.$$.smartPtr = ptr;\n   return registeredInstance[\"clone\"]();\n  } else {\n   var rv = registeredInstance[\"clone\"]();\n   this.destructor(ptr);\n   return rv;\n  }\n }\n function makeDefaultHandle() {\n  if (this.isSmartPointer) {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this.pointeeType,\n    ptr: rawPointer,\n    smartPtrType: this,\n    smartPtr: ptr\n   });\n  } else {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this,\n    ptr: ptr\n   });\n  }\n }\n var actualType = this.registeredClass.getActualType(rawPointer);\n var registeredPointerRecord = registeredPointers[actualType];\n if (!registeredPointerRecord) {\n  return makeDefaultHandle.call(this);\n }\n var toType;\n if (this.isConst) {\n  toType = registeredPointerRecord.constPointerType;\n } else {\n  toType = registeredPointerRecord.pointerType;\n }\n var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n if (dp === null) {\n  return makeDefaultHandle.call(this);\n }\n if (this.isSmartPointer) {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp,\n   smartPtrType: this,\n   smartPtr: ptr\n  });\n } else {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp\n  });\n }\n}\n\nfunction init_RegisteredPointer() {\n RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n}\n\nfunction RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n this.name = name;\n this.registeredClass = registeredClass;\n this.isReference = isReference;\n this.isConst = isConst;\n this.isSmartPointer = isSmartPointer;\n this.pointeeType = pointeeType;\n this.sharingPolicy = sharingPolicy;\n this.rawGetPointee = rawGetPointee;\n this.rawConstructor = rawConstructor;\n this.rawShare = rawShare;\n this.rawDestructor = rawDestructor;\n if (!isSmartPointer && registeredClass.baseClass === undefined) {\n  if (isConst) {\n   this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  } else {\n   this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  }\n } else {\n  this[\"toWireType\"] = genericPointerToWireType;\n }\n}\n\nfunction replacePublicSymbol(name, value, numArguments) {\n if (!Module.hasOwnProperty(name)) {\n  throwInternalError(\"Replacing nonexistant public symbol\");\n }\n if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  Module[name].argCount = numArguments;\n }\n}\n\nfunction dynCallLegacy(sig, ptr, args) {\n var f = Module[\"dynCall_\" + sig];\n return args && args.length ? f.apply(null, [ ptr ].concat(args)) : f.call(null, ptr);\n}\n\nfunction dynCall(sig, ptr, args) {\n if (sig.indexOf(\"j\") != -1) {\n  return dynCallLegacy(sig, ptr, args);\n }\n return wasmTable.get(ptr).apply(null, args);\n}\n\nfunction getDynCaller(sig, ptr) {\n var argCache = [];\n return function() {\n  argCache.length = arguments.length;\n  for (var i = 0; i < arguments.length; i++) {\n   argCache[i] = arguments[i];\n  }\n  return dynCall(sig, ptr, argCache);\n };\n}\n\nfunction embind__requireFunction(signature, rawFunction) {\n signature = readLatin1String(signature);\n function makeDynCaller() {\n  if (signature.indexOf(\"j\") != -1) {\n   return getDynCaller(signature, rawFunction);\n  }\n  return wasmTable.get(rawFunction);\n }\n var fp = makeDynCaller();\n if (typeof fp !== \"function\") {\n  throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n }\n return fp;\n}\n\nvar UnboundTypeError = undefined;\n\nfunction throwUnboundTypeError(message, types) {\n var unboundTypes = [];\n var seen = {};\n function visit(type) {\n  if (seen[type]) {\n   return;\n  }\n  if (registeredTypes[type]) {\n   return;\n  }\n  if (typeDependencies[type]) {\n   typeDependencies[type].forEach(visit);\n   return;\n  }\n  unboundTypes.push(type);\n  seen[type] = true;\n }\n types.forEach(visit);\n throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([ \", \" ]));\n}\n\nfunction __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n name = readLatin1String(name);\n getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n if (upcast) {\n  upcast = embind__requireFunction(upcastSignature, upcast);\n }\n if (downcast) {\n  downcast = embind__requireFunction(downcastSignature, downcast);\n }\n rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n var legalFunctionName = makeLegalFunctionName(name);\n exposePublicSymbol(legalFunctionName, function() {\n  throwUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [ baseClassRawType ]);\n });\n whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], function(base) {\n  base = base[0];\n  var baseClass;\n  var basePrototype;\n  if (baseClassRawType) {\n   baseClass = base.registeredClass;\n   basePrototype = baseClass.instancePrototype;\n  } else {\n   basePrototype = ClassHandle.prototype;\n  }\n  var constructor = createNamedFunction(legalFunctionName, function() {\n   if (Object.getPrototypeOf(this) !== instancePrototype) {\n    throw new BindingError(\"Use 'new' to construct \" + name);\n   }\n   if (undefined === registeredClass.constructor_body) {\n    throw new BindingError(name + \" has no accessible constructor\");\n   }\n   var body = registeredClass.constructor_body[arguments.length];\n   if (undefined === body) {\n    throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n   }\n   return body.apply(this, arguments);\n  });\n  var instancePrototype = Object.create(basePrototype, {\n   constructor: {\n    value: constructor\n   }\n  });\n  constructor.prototype = instancePrototype;\n  var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n  var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n  var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n  var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n  registeredPointers[rawType] = {\n   pointerType: pointerConverter,\n   constPointerType: constPointerConverter\n  };\n  replacePublicSymbol(legalFunctionName, constructor);\n  return [ referenceConverter, pointerConverter, constPointerConverter ];\n });\n}\n\nfunction new_(constructor, argumentList) {\n if (!(constructor instanceof Function)) {\n  throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n }\n var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\n dummy.prototype = constructor.prototype;\n var obj = new dummy();\n var r = constructor.apply(obj, argumentList);\n return r instanceof Object ? r : obj;\n}\n\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n var argCount = argTypes.length;\n if (argCount < 2) {\n  throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n }\n var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n var needsDestructorStack = false;\n for (var i = 1; i < argTypes.length; ++i) {\n  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n   needsDestructorStack = true;\n   break;\n  }\n }\n var returns = argTypes[0].name !== \"void\";\n var argsList = \"\";\n var argsListWired = \"\";\n for (var i = 0; i < argCount - 2; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n }\n var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n if (needsDestructorStack) {\n  invokerFnBody += \"var destructors = [];\\n\";\n }\n var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n var args1 = [ \"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\" ];\n var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];\n if (isClassMethodFunc) {\n  invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n }\n for (var i = 0; i < argCount - 2; ++i) {\n  invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n  args1.push(\"argType\" + i);\n  args2.push(argTypes[i + 2]);\n }\n if (isClassMethodFunc) {\n  argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n }\n invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n if (needsDestructorStack) {\n  invokerFnBody += \"runDestructors(destructors);\\n\";\n } else {\n  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n   var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n   if (argTypes[i].destructorFunction !== null) {\n    invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n    args1.push(paramName + \"_dtor\");\n    args2.push(argTypes[i].destructorFunction);\n   }\n  }\n }\n if (returns) {\n  invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n } else {}\n invokerFnBody += \"}\\n\";\n args1.push(invokerFnBody);\n var invokerFunction = new_(Function, args1).apply(null, args2);\n return invokerFunction;\n}\n\nfunction heap32VectorToArray(count, firstElement) {\n var array = [];\n for (var i = 0; i < count; i++) {\n  array.push(HEAP32[(firstElement >> 2) + i]);\n }\n return array;\n}\n\nfunction __embind_register_class_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, fn) {\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n methodName = readLatin1String(methodName);\n rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + methodName;\n  function unboundTypesHandler() {\n   throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n  }\n  var proto = classType.registeredClass.constructor;\n  if (undefined === proto[methodName]) {\n   unboundTypesHandler.argCount = argCount - 1;\n   proto[methodName] = unboundTypesHandler;\n  } else {\n   ensureOverloadTable(proto, methodName, humanName);\n   proto[methodName].overloadTable[argCount - 1] = unboundTypesHandler;\n  }\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\n   var func = craftInvokerFunction(humanName, invokerArgsArray, null, rawInvoker, fn);\n   if (undefined === proto[methodName].overloadTable) {\n    func.argCount = argCount - 1;\n    proto[methodName] = func;\n   } else {\n    proto[methodName].overloadTable[argCount - 1] = func;\n   }\n   return [];\n  });\n  return [];\n });\n}\n\nfunction validateThis(this_, classType, humanName) {\n if (!(this_ instanceof Object)) {\n  throwBindingError(humanName + ' with invalid \"this\": ' + this_);\n }\n if (!(this_ instanceof classType.registeredClass.constructor)) {\n  throwBindingError(humanName + ' incompatible with \"this\" of type ' + this_.constructor.name);\n }\n if (!this_.$$.ptr) {\n  throwBindingError(\"cannot call emscripten binding method \" + humanName + \" on deleted object\");\n }\n return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);\n}\n\nfunction __embind_register_class_class_property(rawClassType, fieldName, rawFieldType, rawFieldPtr, getterSignature, getter, setterSignature, setter) {\n fieldName = readLatin1String(fieldName);\n getter = embind__requireFunction(getterSignature, getter);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + fieldName;\n  var desc = {\n   get: function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ rawFieldType ]);\n   },\n   enumerable: true,\n   configurable: true\n  };\n  if (setter) {\n   desc.set = function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ rawFieldType ]);\n   };\n  } else {\n   desc.set = function(v) {\n    throwBindingError(humanName + \" is a read-only property\");\n   };\n  }\n  Object.defineProperty(classType.registeredClass.constructor, fieldName, desc);\n  whenDependentTypesAreResolved([], [ rawFieldType ], function(fieldType) {\n   fieldType = fieldType[0];\n   var desc = {\n    get: function() {\n     return fieldType[\"fromWireType\"](getter(rawFieldPtr));\n    },\n    enumerable: true\n   };\n   if (setter) {\n    setter = embind__requireFunction(setterSignature, setter);\n    desc.set = function(v) {\n     var destructors = [];\n     setter(rawFieldPtr, fieldType[\"toWireType\"](destructors, v));\n     runDestructors(destructors);\n    };\n   }\n   Object.defineProperty(classType.registeredClass.constructor, fieldName, desc);\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n assert(argCount > 0);\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n invoker = embind__requireFunction(invokerSignature, invoker);\n var args = [ rawConstructor ];\n var destructors = [];\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = \"constructor \" + classType.name;\n  if (undefined === classType.registeredClass.constructor_body) {\n   classType.registeredClass.constructor_body = [];\n  }\n  if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n   throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n  }\n  classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n   throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n  };\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n    if (arguments.length !== argCount - 1) {\n     throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n    }\n    destructors.length = 0;\n    args.length = argCount;\n    for (var i = 1; i < argCount; ++i) {\n     args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n    }\n    var ptr = invoker.apply(null, args);\n    runDestructors(destructors);\n    return argTypes[0][\"fromWireType\"](ptr);\n   };\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n methodName = readLatin1String(methodName);\n rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + methodName;\n  if (isPureVirtual) {\n   classType.registeredClass.pureVirtualFunctions.push(methodName);\n  }\n  function unboundTypesHandler() {\n   throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n  }\n  var proto = classType.registeredClass.instancePrototype;\n  var method = proto[methodName];\n  if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n   unboundTypesHandler.argCount = argCount - 2;\n   unboundTypesHandler.className = classType.name;\n   proto[methodName] = unboundTypesHandler;\n  } else {\n   ensureOverloadTable(proto, methodName, humanName);\n   proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n  }\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n   if (undefined === proto[methodName].overloadTable) {\n    memberFunction.argCount = argCount - 2;\n    proto[methodName] = memberFunction;\n   } else {\n    proto[methodName].overloadTable[argCount - 2] = memberFunction;\n   }\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_property(classType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n fieldName = readLatin1String(fieldName);\n getter = embind__requireFunction(getterSignature, getter);\n whenDependentTypesAreResolved([], [ classType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + fieldName;\n  var desc = {\n   get: function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ getterReturnType, setterArgumentType ]);\n   },\n   enumerable: true,\n   configurable: true\n  };\n  if (setter) {\n   desc.set = function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ getterReturnType, setterArgumentType ]);\n   };\n  } else {\n   desc.set = function(v) {\n    throwBindingError(humanName + \" is a read-only property\");\n   };\n  }\n  Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n  whenDependentTypesAreResolved([], setter ? [ getterReturnType, setterArgumentType ] : [ getterReturnType ], function(types) {\n   var getterReturnType = types[0];\n   var desc = {\n    get: function() {\n     var ptr = validateThis(this, classType, humanName + \" getter\");\n     return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n    },\n    enumerable: true\n   };\n   if (setter) {\n    setter = embind__requireFunction(setterSignature, setter);\n    var setterArgumentType = types[1];\n    desc.set = function(v) {\n     var ptr = validateThis(this, classType, humanName + \" setter\");\n     var destructors = [];\n     setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, v));\n     runDestructors(destructors);\n    };\n   }\n   Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __emval_decref(handle) {\n if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n  emval_handle_array[handle] = undefined;\n  emval_free_list.push(handle);\n }\n}\n\nfunction __embind_register_emval(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(handle) {\n   var rv = emval_handle_array[handle].value;\n   __emval_decref(handle);\n   return rv;\n  },\n  \"toWireType\": function(destructors, value) {\n   return __emval_register(value);\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: null\n });\n}\n\nfunction enumReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return function(pointer) {\n   var heap = signed ? HEAP8 : HEAPU8;\n   return this[\"fromWireType\"](heap[pointer]);\n  };\n\n case 1:\n  return function(pointer) {\n   var heap = signed ? HEAP16 : HEAPU16;\n   return this[\"fromWireType\"](heap[pointer >> 1]);\n  };\n\n case 2:\n  return function(pointer) {\n   var heap = signed ? HEAP32 : HEAPU32;\n   return this[\"fromWireType\"](heap[pointer >> 2]);\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_enum(rawType, name, size, isSigned) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n function ctor() {}\n ctor.values = {};\n registerType(rawType, {\n  name: name,\n  constructor: ctor,\n  \"fromWireType\": function(c) {\n   return this.constructor.values[c];\n  },\n  \"toWireType\": function(destructors, c) {\n   return c.value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": enumReadValueFromPointer(name, shift, isSigned),\n  destructorFunction: null\n });\n exposePublicSymbol(name, ctor);\n}\n\nfunction __embind_register_enum_value(rawEnumType, name, enumValue) {\n var enumType = requireRegisteredType(rawEnumType, \"enum\");\n name = readLatin1String(name);\n var Enum = enumType.constructor;\n var Value = Object.create(enumType.constructor.prototype, {\n  value: {\n   value: enumValue\n  },\n  constructor: {\n   value: createNamedFunction(enumType.name + \"_\" + name, function() {})\n  }\n });\n Enum.values[enumValue] = Value;\n Enum[name] = Value;\n}\n\nfunction _embind_repr(v) {\n if (v === null) {\n  return \"null\";\n }\n var t = typeof v;\n if (t === \"object\" || t === \"array\" || t === \"function\") {\n  return v.toString();\n } else {\n  return \"\" + v;\n }\n}\n\nfunction floatReadValueFromPointer(name, shift) {\n switch (shift) {\n case 2:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n  };\n\n case 3:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n  };\n\n default:\n  throw new TypeError(\"Unknown float type: \" + name);\n }\n}\n\nfunction __embind_register_float(rawType, name, size) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   return value;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n    throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n   }\n   return value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n name = readLatin1String(name);\n rawInvoker = embind__requireFunction(signature, rawInvoker);\n exposePublicSymbol(name, function() {\n  throwUnboundTypeError(\"Cannot call \" + name + \" due to unbound types\", argTypes);\n }, argCount - 1);\n whenDependentTypesAreResolved([], argTypes, function(argTypes) {\n  var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\n  replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n  return [];\n });\n}\n\nfunction integerReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return signed ? function readS8FromPointer(pointer) {\n   return HEAP8[pointer];\n  } : function readU8FromPointer(pointer) {\n   return HEAPU8[pointer];\n  };\n\n case 1:\n  return signed ? function readS16FromPointer(pointer) {\n   return HEAP16[pointer >> 1];\n  } : function readU16FromPointer(pointer) {\n   return HEAPU16[pointer >> 1];\n  };\n\n case 2:\n  return signed ? function readS32FromPointer(pointer) {\n   return HEAP32[pointer >> 2];\n  } : function readU32FromPointer(pointer) {\n   return HEAPU32[pointer >> 2];\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n name = readLatin1String(name);\n if (maxRange === -1) {\n  maxRange = 4294967295;\n }\n var shift = getShiftFromSize(size);\n var fromWireType = function(value) {\n  return value;\n };\n if (minRange === 0) {\n  var bitshift = 32 - 8 * size;\n  fromWireType = function(value) {\n   return value << bitshift >>> bitshift;\n  };\n }\n var isUnsignedType = name.indexOf(\"unsigned\") != -1;\n registerType(primitiveType, {\n  name: name,\n  \"fromWireType\": fromWireType,\n  \"toWireType\": function(destructors, value) {\n   if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n    throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n   }\n   if (value < minRange || value > maxRange) {\n    throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n   }\n   return isUnsignedType ? value >>> 0 : value | 0;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\n var TA = typeMapping[dataTypeIndex];\n function decodeMemoryView(handle) {\n  handle = handle >> 2;\n  var heap = HEAPU32;\n  var size = heap[handle];\n  var data = heap[handle + 1];\n  return new TA(buffer, data, size);\n }\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": decodeMemoryView,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": decodeMemoryView\n }, {\n  ignoreDuplicateRegistrations: true\n });\n}\n\nfunction __embind_register_std_string(rawType, name) {\n name = readLatin1String(name);\n var stdStringIsUTF8 = name === \"std::string\";\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >> 2];\n   var str;\n   if (stdStringIsUTF8) {\n    var decodeStartPtr = value + 4;\n    for (var i = 0; i <= length; ++i) {\n     var currentBytePtr = value + 4 + i;\n     if (i == length || HEAPU8[currentBytePtr] == 0) {\n      var maxRead = currentBytePtr - decodeStartPtr;\n      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n      if (str === undefined) {\n       str = stringSegment;\n      } else {\n       str += String.fromCharCode(0);\n       str += stringSegment;\n      }\n      decodeStartPtr = currentBytePtr + 1;\n     }\n    }\n   } else {\n    var a = new Array(length);\n    for (var i = 0; i < length; ++i) {\n     a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);\n    }\n    str = a.join(\"\");\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value);\n   }\n   var getLength;\n   var valueIsOfTypeString = typeof value === \"string\";\n   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n    throwBindingError(\"Cannot pass non-string to std::string\");\n   }\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    getLength = function() {\n     return lengthBytesUTF8(value);\n    };\n   } else {\n    getLength = function() {\n     return value.length;\n    };\n   }\n   var length = getLength();\n   var ptr = _malloc(4 + length + 1);\n   HEAPU32[ptr >> 2] = length;\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    stringToUTF8(value, ptr + 4, length + 1);\n   } else {\n    if (valueIsOfTypeString) {\n     for (var i = 0; i < length; ++i) {\n      var charCode = value.charCodeAt(i);\n      if (charCode > 255) {\n       _free(ptr);\n       throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n      }\n      HEAPU8[ptr + 4 + i] = charCode;\n     }\n    } else {\n     for (var i = 0; i < length; ++i) {\n      HEAPU8[ptr + 4 + i] = value[i];\n     }\n    }\n   }\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_std_wstring(rawType, charSize, name) {\n name = readLatin1String(name);\n var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n if (charSize === 2) {\n  decodeString = UTF16ToString;\n  encodeString = stringToUTF16;\n  lengthBytesUTF = lengthBytesUTF16;\n  getHeap = function() {\n   return HEAPU16;\n  };\n  shift = 1;\n } else if (charSize === 4) {\n  decodeString = UTF32ToString;\n  encodeString = stringToUTF32;\n  lengthBytesUTF = lengthBytesUTF32;\n  getHeap = function() {\n   return HEAPU32;\n  };\n  shift = 2;\n }\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >> 2];\n   var HEAP = getHeap();\n   var str;\n   var decodeStartPtr = value + 4;\n   for (var i = 0; i <= length; ++i) {\n    var currentBytePtr = value + 4 + i * charSize;\n    if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n     var maxReadBytes = currentBytePtr - decodeStartPtr;\n     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n     if (str === undefined) {\n      str = stringSegment;\n     } else {\n      str += String.fromCharCode(0);\n      str += stringSegment;\n     }\n     decodeStartPtr = currentBytePtr + charSize;\n    }\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (!(typeof value === \"string\")) {\n    throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n   }\n   var length = lengthBytesUTF(value);\n   var ptr = _malloc(4 + length + charSize);\n   HEAPU32[ptr >> 2] = length >> shift;\n   encodeString(value, ptr + 4, length + charSize);\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_value_object(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n structRegistrations[rawType] = {\n  name: readLatin1String(name),\n  rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n  rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n  fields: []\n };\n}\n\nfunction __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n structRegistrations[structType].fields.push({\n  fieldName: readLatin1String(fieldName),\n  getterReturnType: getterReturnType,\n  getter: embind__requireFunction(getterSignature, getter),\n  getterContext: getterContext,\n  setterArgumentType: setterArgumentType,\n  setter: embind__requireFunction(setterSignature, setter),\n  setterContext: setterContext\n });\n}\n\nfunction __embind_register_void(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  isVoid: true,\n  name: name,\n  \"argPackAdvance\": 0,\n  \"fromWireType\": function() {\n   return undefined;\n  },\n  \"toWireType\": function(destructors, o) {\n   return undefined;\n  }\n });\n}\n\nfunction __emval_as(handle, returnType, destructorsRef) {\n handle = requireHandle(handle);\n returnType = requireRegisteredType(returnType, \"emval::as\");\n var destructors = [];\n var rd = __emval_register(destructors);\n HEAP32[destructorsRef >> 2] = rd;\n return returnType[\"toWireType\"](destructors, handle);\n}\n\nfunction __emval_allocateDestructors(destructorsRef) {\n var destructors = [];\n HEAP32[destructorsRef >> 2] = __emval_register(destructors);\n return destructors;\n}\n\nvar emval_symbols = {};\n\nfunction getStringOrSymbol(address) {\n var symbol = emval_symbols[address];\n if (symbol === undefined) {\n  return readLatin1String(address);\n } else {\n  return symbol;\n }\n}\n\nvar emval_methodCallers = [];\n\nfunction __emval_call_method(caller, handle, methodName, destructorsRef, args) {\n caller = emval_methodCallers[caller];\n handle = requireHandle(handle);\n methodName = getStringOrSymbol(methodName);\n return caller(handle, methodName, __emval_allocateDestructors(destructorsRef), args);\n}\n\nfunction __emval_call_void_method(caller, handle, methodName, args) {\n caller = emval_methodCallers[caller];\n handle = requireHandle(handle);\n methodName = getStringOrSymbol(methodName);\n caller(handle, methodName, null, args);\n}\n\nfunction __emval_addMethodCaller(caller) {\n var id = emval_methodCallers.length;\n emval_methodCallers.push(caller);\n return id;\n}\n\nfunction __emval_lookupTypes(argCount, argTypes) {\n var a = new Array(argCount);\n for (var i = 0; i < argCount; ++i) {\n  a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i], \"parameter \" + i);\n }\n return a;\n}\n\nfunction __emval_get_method_caller(argCount, argTypes) {\n var types = __emval_lookupTypes(argCount, argTypes);\n var retType = types[0];\n var signatureName = retType.name + \"_$\" + types.slice(1).map(function(t) {\n  return t.name;\n }).join(\"_\") + \"$\";\n var params = [ \"retType\" ];\n var args = [ retType ];\n var argsList = \"\";\n for (var i = 0; i < argCount - 1; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  params.push(\"argType\" + i);\n  args.push(types[1 + i]);\n }\n var functionName = makeLegalFunctionName(\"methodCaller_\" + signatureName);\n var functionBody = \"return function \" + functionName + \"(handle, name, destructors, args) {\\n\";\n var offset = 0;\n for (var i = 0; i < argCount - 1; ++i) {\n  functionBody += \"    var arg\" + i + \" = argType\" + i + \".readValueFromPointer(args\" + (offset ? \"+\" + offset : \"\") + \");\\n\";\n  offset += types[i + 1][\"argPackAdvance\"];\n }\n functionBody += \"    var rv = handle[name](\" + argsList + \");\\n\";\n for (var i = 0; i < argCount - 1; ++i) {\n  if (types[i + 1][\"deleteObject\"]) {\n   functionBody += \"    argType\" + i + \".deleteObject(arg\" + i + \");\\n\";\n  }\n }\n if (!retType.isVoid) {\n  functionBody += \"    return retType.toWireType(destructors, rv);\\n\";\n }\n functionBody += \"};\\n\";\n params.push(functionBody);\n var invokerFunction = new_(Function, params).apply(null, args);\n return __emval_addMethodCaller(invokerFunction);\n}\n\nfunction __emval_get_module_property(name) {\n name = getStringOrSymbol(name);\n return __emval_register(Module[name]);\n}\n\nfunction __emval_get_property(handle, key) {\n handle = requireHandle(handle);\n key = requireHandle(key);\n return __emval_register(handle[key]);\n}\n\nfunction __emval_incref(handle) {\n if (handle > 4) {\n  emval_handle_array[handle].refcount += 1;\n }\n}\n\nfunction __emval_new_cstring(v) {\n return __emval_register(getStringOrSymbol(v));\n}\n\nfunction __emval_run_destructors(handle) {\n var destructors = emval_handle_array[handle].value;\n runDestructors(destructors);\n __emval_decref(handle);\n}\n\nfunction __emval_take_value(type, argv) {\n type = requireRegisteredType(type, \"_emval_take_value\");\n var v = type[\"readValueFromPointer\"](argv);\n return __emval_register(v);\n}\n\nfunction _abort() {\n abort();\n}\n\nfunction emscripten_realloc_buffer(size) {\n try {\n  wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  return 1;\n } catch (e) {}\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n var maxHeapSize = 2147483648;\n if (requestedSize > maxHeapSize) {\n  return false;\n }\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  var replacement = emscripten_realloc_buffer(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n return false;\n}\n\nvar SYSCALLS = {\n mappings: {},\n buffers: [ null, [], [] ],\n printChar: function(stream, curr) {\n  var buffer = SYSCALLS.buffers[stream];\n  if (curr === 0 || curr === 10) {\n   (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n   buffer.length = 0;\n  } else {\n   buffer.push(curr);\n  }\n },\n varargs: undefined,\n get: function() {\n  SYSCALLS.varargs += 4;\n  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n },\n get64: function(low, high) {\n  return low;\n }\n};\n\nfunction _fd_close(fd) {\n return 0;\n}\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAP32[iov + i * 8 >> 2];\n  var len = HEAP32[iov + (i * 8 + 4) >> 2];\n  for (var j = 0; j < len; j++) {\n   SYSCALLS.printChar(fd, HEAPU8[ptr + j]);\n  }\n  num += len;\n }\n HEAP32[pnum >> 2] = num;\n return 0;\n}\n\nfunction _setTempRet0($i) {\n setTempRet0($i | 0);\n}\n\ninit_emval();\n\nPureVirtualError = Module[\"PureVirtualError\"] = extendError(Error, \"PureVirtualError\");\n\nembind_init_charCodes();\n\ninit_embind();\n\nBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n\nInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n\ninit_ClassHandle();\n\ninit_RegisteredPointer();\n\nUnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n\nvar ASSERTIONS = false;\n\nfunction intArrayToString(array) {\n var ret = [];\n for (var i = 0; i < array.length; i++) {\n  var chr = array[i];\n  if (chr > 255) {\n   if (ASSERTIONS) {\n    assert(false, \"Character code \" + chr + \" (\" + String.fromCharCode(chr) + \")  at offset \" + i + \" not in 0x00-0xFF.\");\n   }\n   chr &= 255;\n  }\n  ret.push(String.fromCharCode(chr));\n }\n return ret.join(\"\");\n}\n\nvar decodeBase64 = typeof atob === \"function\" ? atob : function(input) {\n var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n var output = \"\";\n var chr1, chr2, chr3;\n var enc1, enc2, enc3, enc4;\n var i = 0;\n input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n do {\n  enc1 = keyStr.indexOf(input.charAt(i++));\n  enc2 = keyStr.indexOf(input.charAt(i++));\n  enc3 = keyStr.indexOf(input.charAt(i++));\n  enc4 = keyStr.indexOf(input.charAt(i++));\n  chr1 = enc1 << 2 | enc2 >> 4;\n  chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n  chr3 = (enc3 & 3) << 6 | enc4;\n  output = output + String.fromCharCode(chr1);\n  if (enc3 !== 64) {\n   output = output + String.fromCharCode(chr2);\n  }\n  if (enc4 !== 64) {\n   output = output + String.fromCharCode(chr3);\n  }\n } while (i < input.length);\n return output;\n};\n\nfunction intArrayFromBase64(s) {\n if (typeof ENVIRONMENT_IS_NODE === \"boolean\" && ENVIRONMENT_IS_NODE) {\n  var buf;\n  try {\n   buf = Buffer.from(s, \"base64\");\n  } catch (_) {\n   buf = new Buffer(s, \"base64\");\n  }\n  return new Uint8Array(buf[\"buffer\"], buf[\"byteOffset\"], buf[\"byteLength\"]);\n }\n try {\n  var decoded = decodeBase64(s);\n  var bytes = new Uint8Array(decoded.length);\n  for (var i = 0; i < decoded.length; ++i) {\n   bytes[i] = decoded.charCodeAt(i);\n  }\n  return bytes;\n } catch (_) {\n  throw new Error(\"Converting base64 string to bytes failed.\");\n }\n}\n\nfunction tryParseAsDataURI(filename) {\n if (!isDataURI(filename)) {\n  return;\n }\n return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n}\n\nvar asmLibraryArg = {\n \"n\": __embind_create_inheriting_constructor,\n \"H\": __embind_finalize_value_object,\n \"A\": __embind_register_bool,\n \"c\": __embind_register_class,\n \"i\": __embind_register_class_class_function,\n \"f\": __embind_register_class_class_property,\n \"r\": __embind_register_class_constructor,\n \"a\": __embind_register_class_function,\n \"b\": __embind_register_class_property,\n \"z\": __embind_register_emval,\n \"k\": __embind_register_enum,\n \"j\": __embind_register_enum_value,\n \"p\": __embind_register_float,\n \"K\": __embind_register_function,\n \"h\": __embind_register_integer,\n \"g\": __embind_register_memory_view,\n \"q\": __embind_register_std_string,\n \"m\": __embind_register_std_wstring,\n \"J\": __embind_register_value_object,\n \"I\": __embind_register_value_object_field,\n \"B\": __embind_register_void,\n \"l\": __emval_as,\n \"G\": __emval_call_method,\n \"e\": __emval_call_void_method,\n \"D\": __emval_decref,\n \"d\": __emval_get_method_caller,\n \"L\": __emval_get_module_property,\n \"u\": __emval_get_property,\n \"C\": __emval_incref,\n \"E\": __emval_new_cstring,\n \"F\": __emval_run_destructors,\n \"t\": __emval_take_value,\n \"s\": _abort,\n \"x\": _emscripten_resize_heap,\n \"y\": _fd_close,\n \"v\": _fd_seek,\n \"o\": _fd_write,\n \"w\": _setTempRet0\n};\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"N\"]).apply(null, arguments);\n};\n\nvar _malloc = Module[\"_malloc\"] = function() {\n return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"P\"]).apply(null, arguments);\n};\n\nvar ___getTypeName = Module[\"___getTypeName\"] = function() {\n return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"Q\"]).apply(null, arguments);\n};\n\nvar ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"R\"]).apply(null, arguments);\n};\n\nvar _free = Module[\"_free\"] = function() {\n return (_free = Module[\"_free\"] = Module[\"asm\"][\"S\"]).apply(null, arguments);\n};\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"T\"]).apply(null, arguments);\n};\n\nvar calledRun;\n\nfunction ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = \"Program terminated with exit(\" + status + \")\";\n this.status = status;\n}\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction run(args) {\n args = args || arguments_;\n if (runDependencies > 0) {\n  return;\n }\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  preMain();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n}\n\nModule[\"run\"] = run;\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nrun();\n\nfunction makeMatrix(m2d) {\n    const m = new DOMMatrix();\n    m.a = m2d.xx;\n    m.b = m2d.xy;\n    m.c = m2d.yx;\n    m.d = m2d.yy;\n    m.e = m2d.tx;\n    m.f = m2d.ty;\n    return m;\n}\n\nModule.onRuntimeInitialized = function () {\n    const {\n        RenderPaintStyle,\n        FillRule,\n        RenderPath,\n        RenderPaint,\n        Renderer,\n        StrokeCap,\n        StrokeJoin,\n        BlendMode\n    } = Module;\n\n    const {\n        fill,\n        stroke\n    } = RenderPaintStyle;\n\n    const {\n        evenOdd,\n        nonZero\n    } = FillRule;\n\n    var CanvasRenderPath = RenderPath.extend(\"CanvasRenderPath\", {\n        __construct: function () {\n            this.__parent.__construct.call(this);\n            this._path2D = new Path2D();\n        },\n        reset: function () {\n            this._path2D = new Path2D();\n        },\n        addPath: function (path, m2d) {\n            this._path2D.addPath(path._path2D, makeMatrix(m2d));\n        },\n        fillRule: function(fillRule) {\n            this._fillRule = fillRule;\n        },\n        moveTo: function (x, y) {\n            this._path2D.moveTo(x, y);\n        },\n        lineTo: function (x, y) {\n            this._path2D.lineTo(x, y);\n        },\n        cubicTo: function (ox, oy, ix, iy, x, y) {\n            this._path2D.bezierCurveTo(ox, oy, ix, iy, x, y);\n        },\n        close: function () {\n            this._path2D.closePath();\n        }\n    });\n\n    function _colorStyle(value) {\n        return 'rgba(' + ((0x00ff0000 & value) >>>\n                16) + ',' + ((0x0000ff00 &\n                value) >>> 8) + ',' + ((0x000000ff & value) >>> 0) + ',' +\n            (((0xff000000 & value) >>> 24) / 0xFF) + ')'\n    }\n    var CanvasRenderPaint = RenderPaint.extend(\"CanvasRenderPaint\", {\n        color: function (value) {\n            this._value = _colorStyle(value);\n        },\n        thickness: function (value) {\n            this._thickness = value;\n        },\n        join: function (value) {\n            switch (value) {\n                case StrokeJoin.miter:\n                    this._join = 'miter';\n                    break;\n                case StrokeJoin.round:\n                    this._join = 'round';\n                    break;\n                case StrokeJoin.bevel:\n                    this._join = 'bevel';\n                    break;\n            }\n        },\n        cap: function (value) {\n            switch (value) {\n                case StrokeCap.butt:\n                    this._cap = 'butt';\n                    break;\n                case StrokeCap.round:\n                    this._cap = 'round';\n                    break;\n                case StrokeCap.square:\n                    this._cap = 'square';\n                    break;\n            }\n        },\n        style: function (value) {\n            this._style = value;\n        },\n        blendMode: function (value) {\n            switch (value) {\n                case BlendMode.srcOver:\n                    this._blend = 'source-over';\n                    break;\n                case BlendMode.screen:\n                    this._blend = 'screen';\n                    break;\n                case BlendMode.overlay:\n                    this._blend = 'overlay';\n                    break;\n                case BlendMode.darken:\n                    this._blend = 'darken';\n                    break;\n                case BlendMode.lighten:\n                    this._blend = 'lighten';\n                    break;\n                case BlendMode.colorDodge:\n                    this._blend = 'color-dodge';\n                    break;\n                case BlendMode.colorBurn:\n                    this._blend = 'color-burn';\n                    break;\n                case BlendMode.hardLight:\n                    this._blend = 'hard-light';\n                    break;\n                case BlendMode.softLight:\n                    this._blend = 'soft-light';\n                    break;\n                case BlendMode.difference:\n                    this._blend = 'difference';\n                    break;\n                case BlendMode.exclusion:\n                    this._blend = 'exclusion';\n                    break;\n                case BlendMode.multiply:\n                    this._blend = 'multiply';\n                    break;\n                case BlendMode.hue:\n                    this._blend = 'hue';\n                    break;\n                case BlendMode.saturation:\n                    this._blend = 'saturation';\n                    break;\n                case BlendMode.color:\n                    this._blend = 'color';\n                    break;\n                case BlendMode.luminosity:\n                    this._blend = 'luminosity';\n                    break;\n            }\n        },\n        linearGradient: function (sx, sy, ex, ey) {\n            this._gradient = {\n                sx,\n                sy,\n                ex,\n                ey,\n                stops: []\n            };\n        },\n        radialGradient: function (sx, sy, ex, ey) {\n            this._gradient = {\n                sx,\n                sy,\n                ex,\n                ey,\n                stops: [],\n                isRadial: true\n            };\n        },\n        addStop: function (color, stop) {\n            this._gradient.stops.push({\n                color,\n                stop\n            });\n        },\n\n        completeGradient: function () {\n\n        },\n\n        draw: function (ctx, path) {\n            let {\n                _style,\n                _value,\n                _gradient,\n                _blend\n            } = this;\n\n            ctx.globalCompositeOperation = _blend;\n\n            if (_gradient != null) {\n                const {\n                    sx,\n                    sy,\n                    ex,\n                    ey,\n                    stops,\n                    isRadial\n                } = _gradient;\n\n                if (isRadial) {\n                    var dx = ex - sx;\n                    var dy = ey - sy;\n                    var radius = Math.sqrt(dx * dx + dy * dy);\n                    _value = ctx.createRadialGradient(sx, sy, 0, sx, sy, radius);\n                } else {\n                    _value = ctx.createLinearGradient(sx, sy, ex, ey);\n                }\n\n                for (const {\n                        stop,\n                        color\n                    } of stops) {\n                    _value.addColorStop(stop, _colorStyle(color));\n                }\n                this._value = _value;\n                this._gradient = null;\n            }\n            switch (_style) {\n                case stroke:\n                    ctx.strokeStyle = _value;\n                    ctx.lineWidth = this._thickness;\n                    ctx.lineCap = this._cap;\n                    ctx.lineJoin = this._join;\n                    ctx.stroke(path._path2D);\n                    break;\n                case fill:\n                    ctx.fillStyle = _value;\n                    ctx.fill(path._path2D, path._fillRule === evenOdd ? 'evenodd' : 'nonzero');\n                    break;\n            }\n        }\n    });\n\n    Module.CanvasRenderer = Renderer.extend(\"Renderer\", {\n        __construct: function (ctx) {\n            this.__parent.__construct.call(this);\n            this._ctx = ctx;\n        },\n        save: function () {\n            this._ctx.save();\n        },\n        restore: function () {\n            this._ctx.restore();\n        },\n        transform: function (matrix) {\n            this._ctx.transform(matrix.xx, matrix.xy, matrix.yx, matrix.yy, matrix.tx,\n                matrix.ty);\n        },\n        drawPath: function (path, paint) {\n            paint.draw(this._ctx, path);\n        },\n        clipPath: function (path) {\n            this._ctx.clip(path._path2D, path._fillRule === evenOdd ? 'evenodd' : 'nonzero');\n        }\n    });\n\n    Module.renderFactory = {\n        makeRenderPaint: function () {\n            return new CanvasRenderPaint();\n        },\n        makeRenderPath: function () {\n            return new CanvasRenderPath();\n        }\n    };\n};\n\n\n  return Rive.ready\n}\n);\n})();\nexport default Rive;\n","import * as rc from './rive_canvas.js';\n\n/**\n * Generic type for a parameterless void callback\n */\nexport type VoidCallback = () => void;\n\n// Tracks playback states; numbers map to the runtime's numerical values\n// i.e. play: 0, pause: 1, stop: 2\nenum PlaybackState {\n  Play = 0,\n  Pause,\n  Stop\n}\n\n/**\n * Interface for artboard bounds\n */\nexport interface Bounds extends rc.AABB {}\n\n// #region layout\n\n// Fit options for the canvas\nexport enum Fit {\n  Cover = 'cover',\n  Contain = 'contain',\n  Fill = 'fill',\n  FitWidth = 'fitWidth',\n  FitHeight = 'fitHeight',\n  None = 'none',\n  ScaleDown = 'scaleDown'\n}\n\n// Alignment options for the canvas\nexport enum Alignment {\n  Center = 'center',\n  TopLeft = 'topLeft',\n  TopCenter = 'topCenter',\n  TopRight = 'topRight',\n  CenterLeft = 'centerLeft',\n  CenterRight = 'centerRight',\n  BottomLeft = 'bottomLeft',\n  BottomCenter = 'bottomCenter',\n  BottomRight = 'bottomRight'\n}\n\n// Interface for the Layout static method contructor\nexport interface LayoutParameters {\n  fit?: Fit,\n  alignment?: Alignment,\n  minX?: number,\n  minY?: number,\n  maxX?: number,\n  maxY?: number\n}\n\n// Alignment options for Rive animations in a HTML canvas\nexport class Layout {\n\n  // Runtime fit and alignment are accessed every frame, so we cache their\n  // values to save cycles\n  private cachedRuntimeFit: rc.Fit;\n  private cachedRuntimeAlignment: rc.Alignment;\n\n  public readonly fit: Fit;\n  public readonly alignment: Alignment;\n  public readonly minX: number;\n  public readonly minY: number;\n  public readonly maxX: number;\n  public readonly maxY: number;\n\n  constructor(params?: LayoutParameters) {\n    this.fit = params?.fit ?? Fit.Contain;\n    this.alignment = params?.alignment ?? Alignment.Center;\n    this.minX = params?.minX ?? 0;\n    this.minY = params?.minY ?? 0;\n    this.maxX = params?.maxX ?? 0;\n    this.maxY = params?.maxY ?? 0;\n  }\n\n  // Alternative constructor to build a Layout from an interface/object\n  static new({ fit, alignment, minX, minY, maxX, maxY }: LayoutParameters): Layout {\n    console.warn('This function is deprecated: please use `new Layout({})` instead');\n    return new Layout({ fit, alignment, minX, minY, maxX, maxY });\n  }\n\n  /**\n   * Makes a copy of the layout, replacing any specified parameters\n   */\n  public copyWith({ fit, alignment, minX, minY, maxX, maxY }: LayoutParameters): Layout {\n    return new Layout({\n      fit: fit ?? this.fit,\n      alignment: alignment ?? this.alignment,\n      minX: minX ?? this.minX,\n      minY: minY ?? this.minY,\n      maxX: maxX ?? this.maxX,\n      maxY: maxY ?? this.maxY\n    });\n  }\n\n  // Returns fit for the Wasm runtime format\n  public runtimeFit(rive: rc.RiveCanvas): rc.Fit {\n    if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n\n    let fit;\n    if (this.fit === Fit.Cover) fit = rive.Fit.cover;\n    else if (this.fit === Fit.Contain) fit = rive.Fit.contain;\n    else if (this.fit === Fit.Fill) fit = rive.Fit.fill;\n    else if (this.fit === Fit.FitWidth) fit = rive.Fit.fitWidth;\n    else if (this.fit === Fit.FitHeight) fit = rive.Fit.fitHeight;\n    else if (this.fit === Fit.ScaleDown) fit = rive.Fit.scaleDown;\n    else fit = rive.Fit.none;\n\n    this.cachedRuntimeFit = fit;\n    return fit;\n  }\n\n  // Returns alignment for the Wasm runtime format\n  public runtimeAlignment(rive: rc.RiveCanvas): rc.Alignment {\n    if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n\n    let alignment;\n    if (this.alignment === Alignment.TopLeft) alignment = rive.Alignment.topLeft;\n    else if (this.alignment === Alignment.TopCenter) alignment = rive.Alignment.topCenter;\n    else if (this.alignment === Alignment.TopRight) alignment = rive.Alignment.topRight;\n    else if (this.alignment === Alignment.CenterLeft) alignment = rive.Alignment.centerLeft;\n    else if (this.alignment === Alignment.CenterRight) alignment = rive.Alignment.centerRight;\n    else if (this.alignment === Alignment.BottomLeft) alignment = rive.Alignment.bottomLeft;\n    else if (this.alignment === Alignment.BottomCenter) alignment = rive.Alignment.bottomCenter;\n    else if (this.alignment === Alignment.BottomRight) alignment = rive.Alignment.bottomRight;\n    else alignment = rive.Alignment.center;\n\n    this.cachedRuntimeAlignment = alignment;\n    return alignment;\n  }\n}\n\n// #endregion\n\n// #region runtime\n\n// Callback type when looking for a runtime instance\nexport type RuntimeCallback = (rive: rc.RiveCanvas) => void;\n\n// Runtime singleton; use getInstance to provide a callback that returns the\n// Rive runtime\nexport class RuntimeLoader {\n\n  // Singleton helpers\n  private static runtime: rc.RiveCanvas;\n  // Flag to indicate that loading has started/completed\n  private static isLoading: boolean = false;\n  // List of callbacks for the runtime that come in while loading\n  private static callBackQueue: RuntimeCallback[] = [];\n  // Instance of the Rive runtime\n  private static rive: rc.RiveCanvas;  \n  // Path to the Wasm file; default path works for testing only;\n  // if embedded wasm is used then this is never used.\n  private static wasmURL: string = 'dist/rive.wasm';\n\n  // Class is never instantiated\n  private constructor() { }\n\n  // Loads the runtime\n  private static loadRuntime(): void {\n    rc.default({\n      // Loads Wasm bundle\n      locateFile: (_: string) => RuntimeLoader.wasmURL\n    }).then((rive: rc.RiveCanvas) => {\n      RuntimeLoader.runtime = rive;\n      // Fire all the callbacks\n      while (RuntimeLoader.callBackQueue.length > 0) {\n        RuntimeLoader.callBackQueue.shift()?.(RuntimeLoader.runtime);\n      }\n    });\n  }\n\n  // Provides a runtime instance via a callback\n  public static getInstance(callback: RuntimeCallback): void {\n    // If it's not loading, start loading runtime\n    if (!RuntimeLoader.isLoading) {\n      RuntimeLoader.isLoading = true;\n      RuntimeLoader.loadRuntime();\n    }\n    if (!RuntimeLoader.runtime) {\n      RuntimeLoader.callBackQueue.push(callback);\n    } else {\n      callback(RuntimeLoader.runtime);\n    }\n  }\n\n  // Provides a runtime instance via a promise\n  public static awaitInstance(): Promise<rc.RiveCanvas> {\n    return new Promise<rc.RiveCanvas>((resolve, reject) =>\n      RuntimeLoader.getInstance((rive: rc.RiveCanvas): void => resolve(rive))\n    );\n  }\n\n  // Manually sets the wasm url\n  public static setWasmUrl(url: string): void {\n    RuntimeLoader.wasmURL = url;\n  }\n}\n\n// #endregion\n\n// #region animations\n\n// Wraps animations and instances from the runtime and keeps track of playback\n// state\nclass Animation {\n  public loopCount: number = 0;\n  public readonly instance: rc.LinearAnimationInstance;\n\n  // Time to which the animation should move to on the next render\n  public scrubTo: number | null = null;\n\n  /**\n   * Constructs a new animation\n   * @constructor\n   * @param {any} animation: runtime animation object\n   * @param {any} instance: runtime animation instance object\n   */\n  constructor(private animation: rc.LinearAnimation, runtime: rc.RiveCanvas, public playing: boolean) {\n    this.instance = new runtime.LinearAnimationInstance(animation);\n  }\n\n  // Returns the animation's name\n  public get name(): string {\n    return this.animation.name;\n  }\n\n  // Returns the animation's current time\n  public get time(): number {\n      return this.instance.time;\n  }\n\n  // Sets the animation's current time\n  public set time(value: number) {\n      this.instance.time = value;\n  }\n\n  // Returns the animation's loop type\n  public get loopValue(): number {\n    return this.animation.loopValue;\n  }\n\n  /**\n   * Advances the animation by the give time. If the animation needs scrubbing,\n   * time is ignored and the stored scrub value is used.\n   * @param time the time to advance the animation by if no scrubbing required\n   */\n  public advance(time: number) {\n    if (this.scrubTo === null) {\n      this.instance.advance(time);\n    } else {\n      this.instance.time = 0;\n      this.instance.advance(this.scrubTo);\n      this.scrubTo = null;\n    }\n  }\n\n  public get needsScrub(): boolean {\n    return this.scrubTo !== null;\n  }\n\n  /**\n   * Deletes the backing Wasm animation instance; once this is called, this\n   * animation is no more.\n   */\n  public cleanup() {\n    this.instance.delete();\n  }\n}\n\n// #endregion\n\n// #region state machines\n\nexport enum StateMachineInputType {\n  Number = 56,\n  Trigger = 58,\n  Boolean = 59,\n}\n\n/**\n * An input for a state machine\n */\nexport class StateMachineInput {\n\n  constructor(public readonly type: StateMachineInputType, private runtimeInput: rc.SMIInput) { }\n\n  /**\n   * Returns the name of the input\n   */\n  public get name(): string {\n    return this.runtimeInput.name;\n  }\n\n  /**\n   * Returns the current value of the input\n   */\n  public get value(): number | boolean {\n    return this.runtimeInput.value;\n  }\n\n  /**\n   * Sets the value of the input\n   */\n  public set value(value: number | boolean) {\n    this.runtimeInput.value = value;\n  }\n\n  /**\n   * Fires a trigger; does nothing on Number or Boolean input types\n   */\n  public fire(): void {\n    if (this.type === StateMachineInputType.Trigger) {\n      this.runtimeInput.fire();\n    }\n  }\n}\n\nclass StateMachine {\n\n  /**\n   * Caches the inputs from the runtime\n   */\n  public readonly inputs: StateMachineInput[] = [];\n\n  /**\n   * Runtime state machine instance\n   */\n  public readonly instance: rc.StateMachineInstance;\n\n  /**\n   * @constructor\n   * @param stateMachine runtime state machine object\n   * @param instance runtime state machine instance object\n   */\n  constructor(private stateMachine: rc.StateMachine, runtime: rc.RiveCanvas, public playing: boolean) {\n    this.instance = new runtime.StateMachineInstance(stateMachine);\n    this.initInputs(runtime);\n  }\n\n  public get name(): string {\n    return this.stateMachine.name;\n  }\n\n  /**\n   * Returns a list of state names that have changed on this frame\n   */\n  public get statesChanged(): string[] {\n    const names: string[] = [];\n    for (let i = 0; i < this.instance.stateChangedCount(); i++) {\n      names.push(this.instance.stateChangedNameByIndex(i));\n    }\n    return names;\n  }\n\n  /**\n   * Fetches references to the state machine's inputs and caches them\n   * @param runtime an instance of the runtime; needed for the SMIInput types\n   */\n  private initInputs(runtime: rc.RiveCanvas): void {\n    // Fetch the inputs from the runtime if we don't have them\n    for (let i = 0; i < this.instance.inputCount(); i++) {\n      const input = this.instance.input(i);\n      this.inputs.push(this.mapRuntimeInput(input, runtime));\n    }\n  }\n\n  /**\n   * Maps a runtime input to it's appropriate type\n   * @param input \n   */\n  private mapRuntimeInput(input: rc.SMIInput, runtime: rc.RiveCanvas): StateMachineInput {\n    if (input.type === runtime.SMIInput.bool) {\n      return new StateMachineInput(StateMachineInputType.Boolean, input.asBool());\n    }\n    else if (input.type === runtime.SMIInput.number) {\n      return new StateMachineInput(StateMachineInputType.Number, input.asNumber());\n    }\n    else if (input.type === runtime.SMIInput.trigger) {\n      return new StateMachineInput(StateMachineInputType.Trigger, input.asTrigger());\n    }\n  }\n\n  /**\n   * Deletes the backing Wasm state machine instance; once this is called, this\n   * state machine is no more.\n   */\n     public cleanup() {\n      this.instance.delete();\n    }\n}\n\n// #endregion\n\n// #region animator\n\n/**\n * Manages animation\n */\nclass Animator {\n\n  /**\n   * Constructs a new animator\n   * @constructor\n   * @param runtime Rive runtime; needed to instance animations & state machines\n   * @param artboard the artboard that holds all animations and state machines\n   * @param animations optional list of animations\n   * @param stateMachines optional list of state machines\n   */\n  constructor(\n    private runtime: rc.RiveCanvas,\n    private artboard: rc.Artboard,\n    private eventManager: EventManager,\n    public readonly animations: Animation[] = [],\n    public readonly stateMachines: StateMachine[] = []) {}\n\n  /**\n   * Adds animations and state machines by their names. If names are shared\n   * between animations & state machines, then the first one found will be\n   * created. Best not to use the same names for these in your Rive file.\n   * @param animatable the name(s) of animations and state machines to add\n   * @returns a list of names of the playing animations and state machines\n   */\n  public add(animatables: string | string[], playing: boolean, fireEvent = true): string[] {\n    animatables = mapToStringArray(animatables);\n    // If animatables is empty, play or pause everything\n    if (animatables.length === 0) {\n      this.animations.forEach(a => a.playing = playing);\n      this.stateMachines.forEach(m => m.playing = playing);\n    } else {\n      // Play/pause already instanced items, or create new instances\n      const instancedAnimationNames = this.animations.map(a => a.name);\n      const instancedMachineNames = this.stateMachines.map(m => m.name);\n      for (const i in animatables) {\n        const aIndex = instancedAnimationNames.indexOf(animatables[i]);\n        const mIndex = instancedMachineNames.indexOf(animatables[i]);\n        if (aIndex >= 0 || mIndex >= 0) {\n          if (aIndex >= 0) {\n            // Animation is instanced, play/pause it\n            this.animations[aIndex].playing = playing;\n          } else {\n            // State machine is instanced, play/pause it\n            this.stateMachines[mIndex].playing = playing;\n          }\n       } else {\n          // Try to create a new animation instance\n          const anim = this.artboard.animationByName(animatables[i]);\n          if(anim) {\n            this.animations.push(new Animation(anim, this.runtime, playing));\n          } else {\n            // Try to create a new state machine instance\n            const sm = this.artboard.stateMachineByName(animatables[i]);\n            if (sm) {\n              this.stateMachines.push(new StateMachine(sm, this.runtime, playing));\n            }\n          }\n        }\n      }\n    }\n    // Fire play/paused events for animations\n    if (fireEvent) {\n      if (playing) {\n        this.eventManager.fire({\n          type: EventType.Play,\n          data: this.playing,\n        });\n      } else {\n        this.eventManager.fire({\n          type: EventType.Pause,\n          data: this.paused,\n        });\n      }\n    }\n\n    return playing ? this.playing : this.paused;\n  }\n\n  /**\n   * Play the named animations/state machines\n   * @param animatables the names of the animations/machines to play; plays all if empty\n   * @returns a list of the playing items\n   */\n  public play(animatables: string | string[]): string[] {\n    return this.add(animatables, true);\n  }\n\n    /**\n   * Pauses named animations and state machines, or everything if nothing is\n   * specified\n   * @param animatables names of the animations and state machines to pause\n   * @returns a list of names of the animations and state machines paused\n   */\n     public pause(animatables: string[]): string[] {\n      return this.add(animatables, false);\n    }\n\n    /**\n     * Set time of named animations\n     * @param animations names of the animations to scrub\n     * @param value time scrub value, a floating point number to which the playhead is jumped\n     * @returns a list of names of the animations that were scrubbed\n     */\n    public scrub(animatables: string[], value: number): string[] {\n      const forScrubbing = this.animations.filter(a => animatables.includes(a.name));\n      forScrubbing.forEach(a => a.scrubTo = value);\n      return forScrubbing.map(a => a.name);\n    }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * playing\n   */\n  public get playing(): string[] {\n    return this.animations.filter(a => a.playing).map(a => a.name).concat(\n           this.stateMachines.filter(m => m.playing).map(m => m.name)\n    );\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * paused\n   */\n     public get paused(): string[] {\n      return this.animations.filter(a => !a.playing).map(a => a.name).concat(\n             this.stateMachines.filter(m => !m.playing).map(m => m.name)\n      );\n    }\n\n  /**\n   * Stops and removes all named animations and state machines\n   * @param animatables animations and state machines to remove\n   * @returns a list of names of removed items\n   */\n  public stop(animatables?: string[] | string): string[] {\n    animatables = mapToStringArray(animatables);\n\n    // If nothing's specified, wipe them out, all of them\n    let removedNames: string[] = [];\n    // Stop everything\n    if (animatables.length === 0) {\n      removedNames = this.animations.map(a => a.name).concat(\n        this.stateMachines.map(m => m.name)\n      );\n      // Clean up before emptying the arrays\n      this.animations.forEach(a => a.cleanup());\n      this.stateMachines.forEach(m => m.cleanup());\n      // Empty out the arrays\n      this.animations.splice(0, this.animations.length);\n      this.stateMachines.splice(0, this.stateMachines.length);\n    } else {\n      // Remove only the named animations/state machines\n      const animationsToRemove = this.animations.filter(\n        a => animatables.includes(a.name)\n      );\n      \n      animationsToRemove.forEach(a => {\n        a.cleanup();\n        this.animations.splice(this.animations.indexOf(a), 1);\n      });\n      const machinesToRemove = this.stateMachines.filter(\n        m => animatables.includes(m.name)\n      );\n      machinesToRemove.forEach(m => {\n        m.cleanup();\n        this.stateMachines.splice(this.stateMachines.indexOf(m), 1);\n      });\n      removedNames = animationsToRemove.map(a => a.name).concat(\n        machinesToRemove.map(m => m.name));\n    }\n\n    this.eventManager.fire({\n      type: EventType.Stop,\n      data: removedNames,\n    });\n\n    // Return the list of animations removed\n    return removedNames;\n  }\n\n  /**\n   * Returns true if at least one animation is active\n   */\n  public get isPlaying(): boolean {\n    return this.animations.reduce((acc, curr) => acc || curr.playing, false)\n        || this.stateMachines.reduce((acc, curr) => acc || curr.playing, false);\n  }\n\n  /**\n   * Returns true if all animations are paused and there's at least one animation\n   */\n  public get isPaused(): boolean {\n    return !this.isPlaying && \n           (this.animations.length > 0 || this.stateMachines.length > 0);  \n  }\n\n  /**\n   * Returns true if there are no playing or paused animations/state machines\n   */\n  public get isStopped(): boolean {\n    return this.animations.length === 0 && this.stateMachines.length === 0;\n  }\n\n  /**\n   * If there are no animations or state machines, add the first one found\n   * @returns the name of the animation or state machine instanced\n   */\n   public atLeastOne(playing: boolean, fireEvent = true): string {\n    let instancedName: string;\n    if (this.animations.length === 0 && this.stateMachines.length === 0) {\n      if(this.artboard.animationCount() > 0) {\n        // Add the first animation\n        this.add([instancedName = this.artboard.animationByIndex(0).name], playing, fireEvent);\n      } else if(this.artboard.stateMachineCount() > 0) {\n        // Add the first state machine\n        this.add([instancedName = this.artboard.stateMachineByIndex(0).name], playing, fireEvent);\n      }\n    }\n    return instancedName;\n  }\n\n  /**\n   * Checks if any animations have looped and if so, fire the appropriate event\n   */\n  public handleLooping() {\n    for (const animation of this.animations.filter(a => a.playing)) {\n      // Emit if the animation looped\n      if (animation.loopValue === 0 && animation.loopCount) {\n        animation.loopCount = 0;\n        // This is a one-shot; if it has ended, delete the instance\n        this.stop(animation.name);\n      }\n      else if (animation.loopValue === 1 && animation.loopCount) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.Loop }\n        });\n        animation.loopCount = 0;\n      }\n      // Wasm indicates a loop at each time the animation\n      // changes direction, so a full loop/lap occurs every\n      // two loop counts\n      else if (animation.loopValue === 2 && animation.loopCount > 1) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.PingPong }\n        });\n        animation.loopCount = 0;\n      }\n    }\n  }\n\n  /**\n   * Checks if states have changed in state machines and fires a statechange\n   * event\n   */\n  public handleStateChanges() {\n    const statesChanged: string[] = [];\n    for (const stateMachine of this.stateMachines.filter(sm => sm.playing)) {\n     statesChanged.push(...stateMachine.statesChanged);\n    }\n    if (statesChanged.length > 0) {\n      this.eventManager.fire({\n        type: EventType.StateChange,\n        data: statesChanged,\n      });\n    }\n  }\n\n}\n\n// #endregion\n\n// #region events\n\n/**\n * Supported event types triggered in Rive\n */\nexport enum EventType {\n  Load        = 'load',\n  LoadError   = 'loaderror',\n  Play        = 'play',\n  Pause       = 'pause',\n  Stop        = 'stop',\n  Loop        = 'loop',\n  Draw        = 'draw',\n  StateChange = 'statechange',\n}\n\n// Event fired by Rive\nexport interface Event {\n  type: EventType,\n  data?: string | string[] | LoopEvent,\n}\n\n/**\n * Looping types: one-shot, loop, and ping-pong\n */\nexport enum LoopType {\n  OneShot = 'oneshot',  // has value 0 in runtime\n  Loop = 'loop',        // has value 1 in runtime\n  PingPong = 'pingpong' // has value 2 in runtime\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport interface LoopEvent {\n  animation: string;\n  type: LoopType;\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport type EventCallback = (event: Event) => void;\n\n/**\n * Event listeners registered with the event manager\n */\nexport interface EventListener {\n  type: EventType,\n  callback: EventCallback,\n}\n\n// Manages Rive events and listeners\nclass EventManager {\n\n  constructor(private listeners: EventListener[] = []) { }\n\n  // Gets listeners of specified type\n  private getListeners(type: EventType): EventListener[] {\n    return this.listeners.filter(e => e.type === type);\n  }\n\n  // Adds a listener\n  public add(listener: EventListener): void {\n    if (!this.listeners.includes(listener)) {\n      this.listeners.push(listener);\n    }\n  }\n\n  /**\n   * Removes a listener\n   * @param listener the listener with the callback to be removed\n   */\n  public remove(listener: EventListener): void {\n    // We can't simply look for the listener as it'll be a different instance to\n    // one originally subscribed. Find all the listeners of the right type and\n    // then check their callbacks which should match.\n    for (let i = 0; i < this.listeners.length; i++) {\n      const currentListener = this.listeners[i];\n      if (currentListener.type === listener.type) {\n        if (currentListener.callback === listener.callback) {\n          this.listeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Clears all listeners of specified type, or every listener if no type is\n   * specified\n   * @param type the type of listeners to clear, or all listeners if not\n   * specified\n   */\n  public removeAll(type?: EventType) {\n    if (!type) {\n      this.listeners.splice(0, this.listeners.length);\n    } else {\n      this.listeners\n        .filter((l) => l.type === type)\n        .forEach((l) => this.remove(l));\n    }\n  }\n\n  // Fires an event\n  public fire(event: Event): void {\n    const eventListeners = this.getListeners(event.type);\n    eventListeners.forEach(\n      listener => listener.callback(event)\n    );\n  }\n}\n\n// #endregion\n\n// #region Manages a queue of tasks\n\n// A task in the queue; will fire the action when the queue is processed; will\n// also optionally fire an event.\nexport interface Task {\n  action: VoidCallback,\n  event?: Event,\n}\n\n// Manages a queue of tasks\nclass TaskQueueManager {\n  private queue: Task[] = [];\n\n  constructor(private eventManager: EventManager) { }\n\n  // Adds a task top the queue\n  public add(task: Task): void {\n    this.queue.push(task);\n  }\n\n  // Processes all tasks in the queue\n  public process(): void {\n    while (this.queue.length > 0) {\n      const task = this.queue.shift();\n      task?.action();\n      if (task?.event) {\n        this.eventManager.fire(task.event);\n      }\n    }\n  }\n}\n\n// #endregion\n\n// #region Rive\n\n// Interface for the Rive static method contructor\nexport interface RiveParameters {\n  canvas: HTMLCanvasElement | OffscreenCanvas, // canvas is required\n  src?: string, // one of src or buffer is required\n  buffer?: ArrayBuffer, // one of src or buffer is required\n  artboard?: string,\n  animations?: string | string[],\n  stateMachines?: string | string[],\n  layout?: Layout,\n  autoplay?: boolean,\n  onload?: EventCallback,\n  onloaderror?: EventCallback,\n  onplay?: EventCallback,\n  onpause?: EventCallback,\n  onstop?: EventCallback,\n  onloop?: EventCallback,\n  onstatechange?: EventCallback,\n}\n\n// Interface to Rive.load function\nexport interface RiveLoadParameters {\n  src?: string,\n  buffer?: ArrayBuffer,\n  autoplay?: boolean,\n  artboard?: string,\n  animations?: string | string[],\n  stateMachines?: string | string[],\n}\n\n// Interface ot Rive.reset function\nexport interface RiveResetParameters {\n  artboard?: string,\n  animations?: string | string[],\n  stateMachines?: string | string[],\n  autoplay?: boolean,\n}\n\nexport class Rive {\n\n  // Canvas in which to render the artboard\n  private readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n\n  // A url to a Rive file; may be undefined if a buffer is specified\n  private src: string;\n\n  // Raw Rive file data; may be undefined if a src is specified\n  private buffer: ArrayBuffer;\n\n  // The layout for rendering in the canvas\n  private _layout: Layout;\n\n  // Flag to indicate if the layout has changed; used by the renderer to know\n  // when to align\n  private _updateLayout: boolean = true;\n\n  // The canvas 2D context\n  private ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D | null;\n\n  // The runtime renderer\n  private renderer: rc.Renderer;\n\n  /**\n   * Flag to active/deactivate renderer\n   */\n  private isRendererActive = true;\n\n  // Tracks if a Rive file is loaded\n  private loaded: boolean = false;\n\n  /**\n   * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n   * commands (e.g. contents) can be called as soon as the file is loaded.\n   * However, playback commands need to be queued and run in order once initial\n   * animations and autoplay has been sorted out. This applies to play, pause,\n   * and start.\n   */\n  private readyForPlaying: boolean = false;\n\n  // Wasm runtime\n  private runtime: rc.RiveCanvas;\n\n  // Runtime artboard\n  private artboard: rc.Artboard | null = null;\n\n  // Runtime file\n  private file: rc.File;\n\n  // Holds event listeners\n  private eventManager: EventManager;\n\n  // Manages the loading task queue\n  private taskQueue: TaskQueueManager;\n\n  // Animator: manages animations and state machines\n  private animator: Animator;\n\n  // Error message for missing source or buffer\n  private static readonly missingErrorMessage: string =\n    'Rive source file or data buffer required';\n\n  constructor(params: RiveParameters) {\n    this.canvas = params.canvas;\n    this.src = params.src;\n    this.buffer = params.buffer;\n    this.layout = params.layout ?? new Layout();\n    this._updateLayout = true;\n\n    // Fetch the 2d context from the canvas\n    this.ctx = this.canvas.getContext('2d');\n\n    // New event management system\n    this.eventManager = new EventManager();\n    if (params.onload) this.on(EventType.Load, params.onload);\n    if (params.onloaderror) this.on(EventType.LoadError, params.onloaderror);\n    if (params.onplay) this.on(EventType.Play, params.onplay);\n    if (params.onpause) this.on(EventType.Pause, params.onpause);\n    if (params.onstop) this.on(EventType.Stop, params.onstop);\n    if (params.onloop) this.on(EventType.Loop, params.onloop);\n    if (params.onstatechange) this.on(EventType.StateChange, params.onstatechange);\n\n    // Hook up the task queue\n    this.taskQueue = new TaskQueueManager(this.eventManager);\n\n    this.init({\n      src: this.src,\n      buffer: this.buffer,\n      autoplay: params.autoplay,\n      animations: params.animations,\n      stateMachines: params.stateMachines,\n      artboard: params.artboard\n    });\n  }\n\n  // Alternative constructor to build a Rive instance from an interface/object\n  public static new(params: RiveParameters): Rive {\n    console.warn('This function is deprecated: please use `new Rive({})` instead');\n    return new Rive(params);\n  }\n\n  // Initializes the Rive object either from constructor or load()\n  private init({ src, buffer, animations, stateMachines, artboard, autoplay = false }: RiveLoadParameters): void {\n    this.src = src;\n    this.buffer = buffer;\n\n    // If no source file url specified, it's a bust\n    if (!this.src && !this.buffer) {\n      throw new Error(Rive.missingErrorMessage);\n    }\n\n    // List of animations that should be initialized.\n    const startingAnimationNames = mapToStringArray(animations);\n\n    // List of state machines that should be initialized\n    const startingStateMachineNames = mapToStringArray(stateMachines);\n\n    // Ensure loaded is marked as false if loading new file\n    this.loaded = false;\n    this.readyForPlaying = false;\n\n    // Ensure the runtime is loaded\n    RuntimeLoader.awaitInstance().then((runtime) => {\n      this.runtime = runtime;\n      // Load Rive data from a source uri or a data buffer\n      this.initData(artboard, startingAnimationNames, startingStateMachineNames, autoplay).catch(e => {\n        console.error(e);\n      });\n    }).catch(e => {\n      console.error(e);\n    });\n  }\n\n  // Initializes runtime with Rive data and preps for playing\n  private async initData(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): Promise<void> {\n    // Load the buffer from the src if provided\n    if (this.src) {\n      this.buffer = await loadRiveFile(this.src);\n    }\n    // Load the Rive file\n    this.file = await this.runtime.load(new Uint8Array(this.buffer));\n    if (this.file) {\n      // Initialize and draw frame\n      this.initArtboard(artboardName, animationNames, stateMachineNames, autoplay);\n\n      // Everything's set up, emit a load event\n      this.loaded = true;\n      this.eventManager.fire({\n        type: EventType.Load,\n        data: this.src ?? 'buffer'\n      });\n\n      // Flag ready for playback commands and clear the task queue; this order\n      // is important or it may infinitely recurse\n      this.readyForPlaying = true;\n      this.taskQueue.process();\n\n      this.drawFrame();\n\n      return Promise.resolve();\n    } else {\n      const msg = 'Problem loading file; may be corrupt!';\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return Promise.reject(msg);\n    }\n  }\n\n  // Initialize for playback\n  private initArtboard(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): void {\n\n    // Fetch the artboard\n    const rootArtboard = artboardName ?\n      this.file.artboardByName(artboardName) :\n      this.file.defaultArtboard();\n    \n    // Check we have a working artboard\n    if (!rootArtboard) {\n      const msg = 'Invalid artboard name or no default artboard';\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return;\n    }\n\n    // Instance the artboard\n    this.artboard = rootArtboard.instance();\n\n    // Check that the artboard has at least 1 animation\n    if (this.artboard.animationCount() < 1) {\n      const msg = 'Artboard has no animations';\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      throw msg;\n    }\n\n    // Initialize the animator\n    this.animator = new Animator(this.runtime, this.artboard, this.eventManager);\n\n    // Get the canvas where you want to render the animation and create a renderer\n    this.renderer = new this.runtime.CanvasRenderer(this.ctx);\n\n\n    // Initialize the animations; as loaded hasn't happened yet, we need to\n    // suppress firing the play/pause events until the load event has fired. To\n    // do this we tell the animator to suppress firing events, and add event\n    // firing to the task queue.\n    let instanceNames: string[];\n    if (animationNames.length > 0 || stateMachineNames.length > 0) {\n      instanceNames = animationNames.concat(stateMachineNames);\n      this.animator.add(instanceNames, autoplay, false);\n    } else {\n      instanceNames = [this.animator.atLeastOne(autoplay, false)];\n    }\n    // Queue up firing the playback events\n    this.taskQueue.add({\n      action: () => {},\n      event: {\n        type: autoplay ? EventType.Play : EventType.Pause,\n        data: instanceNames,\n      }\n    });\n  }\n\n  // Draws the current artboard frame\n  public drawFrame() {\n    this.startRendering();\n  }\n\n  // Tracks the last timestamp at which the animation was rendered. Used only in\n  // draw().\n  private lastRenderTime: number;\n\n  // Tracks the current animation frame request\n  private frameRequestId: number | null;\n\n  /**\n   * Used be draw to track when a second of active rendering time has passed. Used for debugging purposes\n   */\n  private renderSecondTimer: number = 0;\n\n  /**\n   * Draw rendering loop; renders animation frames at the correct time interval.\n   * @param time the time at which to render a frame\n   */\n  private draw(time: number, onSecond?: VoidCallback): void {\n    // Clear the frameRequestId, as we're now rendering a fresh frame\n    this.frameRequestId = null;\n\n    // On the first pass, make sure lastTime has a valid value\n    if (!this.lastRenderTime) {\n      this.lastRenderTime = time;\n    }\n\n    // Handle the onSecond callback\n    this.renderSecondTimer += (time - this.lastRenderTime);\n    if (this.renderSecondTimer > 5000) {\n      this.renderSecondTimer = 0;\n      onSecond?.();\n    }\n\n    // Calculate the elapsed time between frames in seconds\n    const elapsedTime = (time - this.lastRenderTime) / 1000;\n    this.lastRenderTime = time;\n\n    // Advance non-paused animations by the elapsed number of seconds\n    // Also advance any animations that require scrubbing\n    const activeAnimations = this.animator.animations.filter(a => a.playing || a.needsScrub)\n      // The scrubbed animations must be applied first to prevent weird artifacts\n      // if the playing animations conflict with the scrubbed animating attribuates.\n      .sort((first, second) => first.needsScrub ? -1 : 1);\n    for (const animation of activeAnimations) {\n      animation.advance(elapsedTime);\n      if (animation.instance.didLoop) {\n        animation.loopCount += 1;\n      }\n      animation.instance.apply(this.artboard, 1.0);\n    }\n\n    // Advance non-paused state machines by the elapsed number of seconds\n    const activeStateMachines = this.animator.stateMachines.filter(a => a.playing);\n    for (const stateMachine of activeStateMachines) {\n      stateMachine.instance.advance(this.artboard, elapsedTime);\n      // stateMachine.instance.apply(this.artboard);\n    }\n\n    // Once the animations have been applied to the artboard, advance it\n    // by the elapsed time.\n    this.artboard.advance(elapsedTime);\n\n    // Update the renderer alignment if necessary\n    this.alignRenderer();\n\n    const bounds = this.artboard.bounds;\n    this.ctx.clearRect(bounds.minX, bounds.minY, bounds.maxX, bounds.maxY);\n    this.artboard.draw(this.renderer);\n\n    // Check for any animations that looped\n    this.animator.handleLooping();\n\n    // Check for any state machines that had a state change\n    this.animator.handleStateChanges();\n\n    // Calling requestAnimationFrame will rerun draw() at the correct rate:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n    if (this.animator.isPlaying) {\n      // Request a new rendering frame\n      this.startRendering();\n    } else if (this.animator.isPaused) {\n      // Reset the end time so on playback it starts at the correct frame\n      this.lastRenderTime = 0;\n    } else if (this.animator.isStopped) {\n      // Reset animation instances, artboard and time\n      // TODO: implement this properly when we have instancing\n      // this.initArtboard();\n      // this.drawFrame();\n      this.lastRenderTime = 0;\n    }\n  }\n\n  /**\n   * Align the renderer\n   */\n  private alignRenderer(): void {\n    // Update the renderer alignment if necessary\n    if (this._updateLayout) {\n      // Restore from previous save in case a previous align occurred\n      this.ctx.restore();\n      // Canvas must be wiped to prevent artifacts\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      // Now save so that future changes to align can restore\n      this.ctx.save();\n      // Align things up safe in the knowledge we can restore if changed\n      this.renderer.align(\n        this._layout.runtimeFit(this.runtime),\n        this._layout.runtimeAlignment(this.runtime),\n        {\n          minX: this._layout.minX,\n          minY: this._layout.minY,\n          maxX: this._layout.maxX,\n          maxY: this._layout.maxY\n        },\n        this.artboard.bounds\n      );\n      this._updateLayout = false;\n    }\n  }\n\n  /**\n   * Cleans up any Wasm-generated objects that need to be manually destroyed:\n   * artboard instances, animation instances, state machine instances.\n   *\n   * Once this is called, things will need to be reinitialized or bad things\n   * might happen.\n   */\n  public cleanup() {\n    this.artboard.delete();\n    // TODO: delete animation and state machine instances\n  }\n\n  // Plays specified animations; if none specified, it unpauses everything.\n  public play(animationNames?: string | string[], autoplay?: true): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, queue up the play\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.play(animationNames, autoplay),\n      });\n      return;\n    }\n    this.animator.play(animationNames);\n    this.startRendering();\n  }\n\n  // Pauses specified animations; if none specified, pauses all.\n  public pause(animationNames?: string | string[]): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.pause(animationNames),\n      });\n      return;\n    }\n    this.animator.pause(animationNames);\n  }\n\n  public scrub(animationNames?: string | string[], value?: number): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n        this.taskQueue.add({\n            action: () => this.scrub(animationNames, value),\n        });\n        return;\n    }\n\n    // Scrub the animation time; we draw a single frame here so that if\n    // nothing's currently playing, the scrubbed animation is still rendered/\n    this.animator.scrub(animationNames, value || 0);\n    this.drawFrame();\n  }\n\n  // Stops specified animations; if none specifies, stops them all.\n  public stop(animationNames?: string | string[] | undefined): void {\n    animationNames = mapToStringArray(animationNames);\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.stop(animationNames),\n      });\n      return;\n    }\n    this.animator.stop(animationNames);\n  }\n\n  /**\n   * Resets the animation\n   * @param artboard the name of the artboard, or default if none given\n   * @param animations the names of animations for playback\n   * @param stateMachines the names of state machines for playback\n   * @param autoplay whether to autoplay when reset, defaults to false\n   *\n   */\n  public reset(params?: RiveResetParameters): void {\n    // Get the current artboard, animations, state machines, and playback states\n    const artBoardName = params?.artboard;\n    const animationNames = mapToStringArray(params?.animations);\n    const stateMachineNames = mapToStringArray(params?.stateMachines);\n    const autoplay = params?.autoplay ?? false;\n\n    // Stop everything and clean up\n    this.stop();\n    this.cleanup();\n\n    // Reinitialize an artboard instance with the state\n    this.initArtboard(artBoardName, animationNames, stateMachineNames, autoplay);\n  }\n\n\n  // Loads a new Rive file, keeping listeners in place\n  public load(params: RiveLoadParameters): void {\n    // Stop all animations\n    this.stop();\n    // Update the layout to account for new renderer\n    this._updateLayout = true;\n    // Reinitialize\n    this.init(params);\n  }\n\n  // Sets a new layout\n  public set layout(layout: Layout) {\n    this._layout = layout;\n    this._updateLayout = true;\n    // If the maxX or maxY are 0, then set them to the canvas width and height\n    if (!layout.maxX || !layout.maxY) {\n      this.resizeToCanvas();\n    }\n    if (this.loaded && !this.animator.isPlaying) {\n      this.drawFrame();\n    }\n  }\n\n  /**\n   * Returns the current layout. Note that layout should be treated as\n   * immutable. If you want to change the layout, create a new one use the\n   * layout setter\n   */\n  public get layout() {\n    return this._layout;\n  }\n\n  /** \n   * Sets the layout bounds to the current canvas size; this is typically called\n   * when the canvas is resized\n   */\n  public resizeToCanvas() {\n    this._layout = this.layout.copyWith({\n      minX: 0,\n      minY: 0,\n      maxX: this.canvas.width,\n      maxY: this.canvas.height\n    });\n    this._updateLayout = true;\n  }\n\n  // Returns the animation source, which may be undefined\n  public get source(): string {\n    return this.src;\n  }\n\n  /**\n   * Returns the name of the active artboard\n   */\n  public get activeArtboard(): string {\n    return this.artboard.name;\n  }\n\n  // Returns a list of animation names on the chosen artboard\n  public get animationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const animationNames: string[] = [];\n    for (let i = 0; i < this.artboard.animationCount(); i++) {\n      animationNames.push(this.artboard.animationByIndex(i).name);\n    }\n    return animationNames;\n  }\n\n  /**\n   * Returns a list of state machine names from the current artboard\n   */\n  public get stateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const stateMachineNames: string[] = [];\n    for (let i = 0; i < this.artboard.stateMachineCount(); i++) {\n      stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n    }\n    return stateMachineNames;\n  }\n\n  /**\n   * Returns the inputs for the specified instanced state machine, or an empty\n   * list if the name is invalid or the state machine is not instanced\n   * @param name the state machine name\n   * @returns the inputs for the named state machine\n   */\n  public stateMachineInputs(name: string): StateMachineInput[] {\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.loaded) {\n      return;\n    }\n    const stateMachine = this.animator.stateMachines.find(m => m.name === name);\n    return stateMachine?.inputs;\n  }\n\n  // Returns a list of playing machine names\n  public get playingStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter(m => m.playing)\n      .map(m => m.name);\n  }\n\n  // Returns a list of playing animation names\n  public get playingAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter(a => a.playing)\n      .map(a => a.name);\n  }\n\n\n  // Returns a list of paused animation names\n  public get pausedAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter(a => !a.playing)\n      .map(a => a.name);\n  }\n\n  /**\n   *  Returns a list of paused machine names\n   * @returns a list of state machine names that are paused\n   */\n  public get pausedStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter(m => !m.playing)\n      .map(m => m.name);\n  }\n\n  /**\n   * @returns true if any animation is playing\n   */\n  public get isPlaying(): boolean {\n    return this.animator.isPlaying;\n  }\n\n  /**\n   * @returns true if all instanced animations are paused\n   */\n  public get isPaused(): boolean {\n    return this.animator.isPaused;\n  }\n\n  /**\n   * @returns true if no animations are playing or paused\n   */\n  public get isStopped(): boolean {\n    return this.animator.isStopped;\n  }\n\n  /**\n   * @returns the bounds of the current artboard, or undefined if the artboard\n   * isn't loaded yet.\n   */\n  public get bounds(): Bounds {\n    return this.artboard ? this.artboard.bounds : undefined;\n  }\n\n  /**\n   * Subscribe to Rive-generated events\n   * @param type the type of event to subscribe to\n   * @param callback callback to fire when the event occurs\n   */\n  public on(type: EventType, callback: EventCallback) {\n    this.eventManager.add({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes from a Rive-generated event\n   * @param callback the callback to unsubscribe from\n   */\n  public unsubscribe(type: EventType, callback: EventCallback) {\n    this.eventManager.remove({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes all listeners from an event type, or everything if no type is\n   * given\n   * @param type the type of event to unsubscribe from, or all types if\n   * undefined\n   */\n  public unsubscribeAll(type?: EventType) {\n    this.eventManager.removeAll(type);\n  }\n\n  /**\n   * Stops the rendering loop; this is different from pausing in that it doesn't\n   * change the state of any animation. It stops rendering from occurring. This\n   * is designed for situations such as when Rive isn't visible.\n   *\n   * The only way to start rendering again is to call `startRendering`.\n   * Animations that are marked as playing will start from the position that\n   * they would have been at if rendering had not been stopped.\n   */\n  public stopRendering() {\n    if (this.loaded && this.frameRequestId) {\n      cancelAnimationFrame(this.frameRequestId);\n      this.frameRequestId = null;\n    }\n  }\n\n  /**\n   * Starts the rendering loop if it has been previously stopped. If the\n   * renderer is already active, then this will have zero effect.\n   */\n  public startRendering() {\n    if (this.loaded && !this.frameRequestId) {\n      this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n    }\n  }\n\n  /**\n   * Returns the contents of a Rive file: the artboards, animations, and state machines\n   */\n  public get contents(): RiveFileContents {\n    if (!this.loaded) {\n      return undefined;\n    }\n    const riveContents: RiveFileContents = {\n      artboards: [],\n    };\n    for (let i = 0; i < this.file.artboardCount(); i++) {\n      const artboard = this.file.artboardByIndex(i);\n      const artboardContents: ArtboardContents = {\n        name: artboard.name,\n        animations: [],\n        stateMachines: [],\n      };\n      for (let j = 0; j < artboard.animationCount(); j++) {\n        const animation = artboard.animationByIndex(j);\n        artboardContents.animations.push(animation.name);\n      }\n      for (let k = 0; k < artboard.stateMachineCount(); k++) {\n        const stateMachine = artboard.stateMachineByIndex(k);\n        const name = stateMachine.name;\n        const instance = new this.runtime.StateMachineInstance(stateMachine);\n        const inputContents: StateMachineInputContents[] = [];\n        for (let l = 0; l < instance.inputCount(); l++) {\n          const input = instance.input(l);\n          inputContents.push({name: input.name, type: input.type});\n        }\n        artboardContents.stateMachines.push({name: name, inputs: inputContents});\n      }\n      riveContents.artboards.push(artboardContents);\n    }\n    return riveContents;\n  }\n}\n\n/**\n * Contents of a state machine input\n */\ninterface StateMachineInputContents {\n  name: string;\n  type: StateMachineInputType;\n  initialValue?: boolean | number;\n}\n\n/**\n * Contents of a state machine\n */\ninterface StateMachineContents {\n  name: string;\n  inputs: StateMachineInputContents[];\n}\n\n/**\n * Contents of an artboard\n */\ninterface ArtboardContents {\n  animations: string[];\n  stateMachines: StateMachineContents[];\n  name: string;\n}\n\n/**\n * contents of a Rive file\n */\ninterface RiveFileContents {\n  artboards?: ArtboardContents[];\n}\n\n\n// Loads Rive data from a URI via fetch.\nconst loadRiveFile = async (src: string): Promise<ArrayBuffer> => {\n  const req = new Request(src);\n  const res = await fetch(req);\n  const buffer = await res.arrayBuffer();\n  return buffer;\n}\n\n// #endregion\n\n// #region utility functions\n\n/*\n * Utility function to ensure an object is a string array\n */\nlet mapToStringArray = (obj?: string[] | string | undefined): string[] => {\n  if (typeof obj === 'string') {\n    return [obj];\n  } else if (obj instanceof Array) {\n    return obj;\n  }\n  // If obj is undefined, return empty array\n  return [];\n}\n\n// #endregion\n\n// #region testing utilities\n\n// Exports to only be used for tests\nexport const Testing = {\n  EventManager: EventManager,\n  TaskQueueManager: TaskQueueManager,\n}\n\n// #endregion"],"sourceRoot":""}